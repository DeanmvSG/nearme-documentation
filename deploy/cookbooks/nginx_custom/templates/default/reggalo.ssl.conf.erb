# Directive assigns configuration for the virtual server.
server {
# The listen directive specifies the address and port accepted by the enclosing server {...} block. It is possible to specify only an address, only a port, or a server name as the address.
  # The solo instance_role runs https over the usual port 443, but the app_master instance_role
  # runs on port 444 because it is behind HAProxy, which uses port 443.
  listen <%= @instance_role == 'solo' ? '443' : '444' %>;

  #
  # Server Names
  #
  # This is the list of IP's and/or domain names with any wildcards or
  # subdomains. The special value '_' is used to match all domains and IPs and
  # generally denotes the default server for the entire Nginx process.
  #
  # Note that if you specify any domains with wild cards, the very first domain
  # listed must be without a wild card. For example:
  #
  # server_name www.mydomain.org *.mydomain.org;
  #
  # It is good practice to include wildcard subdomains so that Nginx will not
  # require a restart when new services are added for an application.
  #
  server_name .reggalo.com;

  #
  # SSL certificates
  #
  # Be sure that the directory and files are owned by and/or readable by the
  # Nginx user. Additionally, it is recommended that you do not use signed
  # certificates. The justification for this reocommendation is that in order to
  # start up the Nginx server the password will need to be typed in every time.
  # This precludes automatic/automated web server restarts on boot or otherwise.
  #
  ssl on;
  ssl_certificate /data/nginx/ssl/reggalo.crt;
  ssl_certificate_key /data/nginx/ssl/reggalo.key;
  ssl_protocols SSLv3 TLSv1;
  ssl_ciphers ECDHE-RSA-AES256-SHA384:AES256-SHA256:RC4:HIGH:!MD5:!aNULL:!EDH:!AESGCM;
  ssl_prefer_server_ciphers on;

  #
  # The application root which is inherited for all location blocks below.
  #
  root /data/desksnearme/current/public;

  access_log /var/log/engineyard/nginx/reggalo.access.ssl.log main;

  error_log /var/log/engineyard/nginx/reggalo.error.log notice;
  # error_log /dev/null notice;

  include /etc/nginx/common/servers.conf;

  # Location for the Upstream (a/k/a Unicorn or Mongrel)
  location @app_desksnearmessl {
    include /etc/nginx/common/proxy.conf;
    proxy_set_header        X-Forwarded-Proto https;
    proxy_pass http://upstream_desksnearmessl;
  }

  location = /system/maintenance.html { }

  # custom CORS policy for webfonts in Firefox
  location ~* .(eot|ttf|woff)$ {
    add_header Access-Control-Allow-Origin *;
  }

  location ^~ /assets/ {
    # Only use gzip_static if you have .gz compressed assets *precompiled*
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  # set Expire header on assets: see http://developer.yahoo.com/performance/rules.html#expires
  location ~ ^/(images|assets|javascripts|stylesheets)/ {
    try_files  $uri $uri/index.html /last_assets/$uri /last_assets/$uri.html @app_desksnearmessl;
    expires 10y;
  }

  location / {
    if (-f $document_root/system/maintenance.html) { return 503; }
    # auth is disabled for this server
    # auth_basic            "Restricted";
    # auth_basic_user_file  /etc/nginx/servers/desksnearme.users;
    try_files  $uri $uri/index.html $uri.html @app_desksnearmessl;
  }

  location = /500.html {
     root /data/desksnearme/current/public;
  }
  include /etc/nginx/servers/desksnearme/custom.ssl.conf;
}
