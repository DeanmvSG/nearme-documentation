# The recommended workaround is to create a separate Gemfile in the root of your
# repository (call it `.overcommit_gems.rb`), and include only the gems that
# your Overcommit hooks need in order to run. This significantly reduces the
# startup delay in your hook runs. Make sure to commit both
# `.overcommit_gems.rb` and the resulting `.overcommit_gems.rb.lock` file to
# your repository, and then set the `gemfile` option below to the name you gave
# the file.
# (Generate lock file by running `bundle install --gemfile=.overcommit_gems.rb`)
gemfile: false

# Where to store hook plugins specific to a repository. These are loaded in
# addition to the default hooks Overcommit comes with. The location is relative
# to the root of the repository.
plugin_directory: '.git-hooks'

# Whether to hide hook output by default. This results in completely silent hook
# runs except in the case of warning or failure.
quiet: false

# Number of hooks that can be run concurrently. Typically this won't need to be
# adjusted, but if you know that some of your hooks themselves use multiple
# processors you can lower this value accordingly. You can define
# single-operator mathematical expressions, e.g. '%{processors} * 2', or
# '%{processors} / 2'.
concurrency: '%{processors}'

# Whether to check if a hook plugin has changed since Overcommit last ran it.
# This is a defense mechanism when working with repositories which can contain
# untrusted code (e.g. when you fetch a pull request from a third party).
# See https://github.com/brigade/overcommit#security for more information.
verify_signatures: true

CommitMsg:
  ALL:
    requires_files: false
    quiet: false

  EmptyMessage:
    enabled: true
    description: 'Check for empty commit message'
    quiet: true

  RussianNovel:
    enabled: true
    description: 'Check length of commit message'
    quiet: true

  SingleLineSubject:
    enabled: true
    description: 'Check subject line'

  TextWidth:
    enabled: true
    description: 'Check text width'
    max_subject_width: 60
    max_body_width: 72

  MessageFormat:
    enabled: true
    description: 'Check commit message matches expected pattern'
    pattern: '\A[A-Z]{2,4}[-]\d{2,5}(.+)'
    expected_pattern_message: '<Project>-<Number> <Commit Message Description>'
    sample_message: 'NM-1234 Sample message'

  TrailingPeriod:
    enabled: true
    description: 'Check for trailing periods in subject'

# Hooks that are run after `git commit` is executed, before the commit message
# editor is displayed. These hooks are ideal for syntax checkers, linters, and
# other checks that you want to run before you allow a commit object to be
# created.
PreCommit:
  RuboCop:
    enabled: true
    include: ['./**/*.rb']
    requires_files: true
    problem_on_unmodified_line: ignore
  Fasterer:
    enabled: true
    include: ['./**/*.rb']
    requires_files: true
    problem_on_unmodified_line: ignore
  EnsureFrontendDocsUpdate:
    quiet: true
    enabled: false
    include:
      - 'app/drops/**/*.rb'
      - 'app/liquid_tags/*.rb'
      - 'lib/liquid_filters.rb'
    requires_files: true
    required_executable: './git-hooks/pre-commit/yard-frontend-docs-completeness'
    problem_on_unmodified_line: ignore
