.topic-a
  / add background image with inline css, ex: <div class="wrap" style="background-image: url(path/to/image.jpg);">
  .wrap
    .contain
      %h1.hx= @topic.name
      %p= @topic.description
  .contain
    %nav.navbar-a
      %ul.nav.nav-tabs{role: "tablist"}
        %li.active
          = link_to '#activity', role: "tab", :'data-toggle' => "tab" do
            = t(:activity)
        %li
          = link_to '#followers', role: "tab", :'data-toggle' => "tab" do
            = t :followers
            %small= "(#{@topic.feed_followers.count})"
        %li
          = link_to '#projects', role: "tab", :'data-toggle' => "tab" do
            = t :projects
            %small= "(#{@topic.projects.count})"
      %p{:'data-follow-button' => true}
        = render partial: 'shared/follow_button', locals: { object: @topic }
        - if current_user && InstanceAdminAuthorizer.new(current_user).authorized?('Manage')
          %p= link_to t(:edit), edit_instance_admin_manage_topic_path(@topic), class: 'button-a small', rel: "modal"


.tab-content
  #activity.tab-pane.fade.active{:role => "tabpanel"}
    = render 'show_activity', object: @topic, feed: @feed
  #followers.tab-pane.fade{:role => "tabpanel"}
    .wrap-a.reduce-top
      .contain
        .box-a= render 'shared/show_followers', object: @topic
  #projects.tab-pane.fade{:role => "tabpanel"}
    / content wrapper
    .wrap-a.reduce-top
      .contain
        / white box
        .box-a
          = simple_form_for :search_filter, url: root_url do |f|
            .filters-a
              .results
                = f.input :sort, as: :select, collection: ['Name', 'Date'], input_html: { class: 'selectize', data: { placeholder: t(:sort, scope: [:simple_form, :placeholders, :search_filter] )}}, wrapper_html: { class: 'sort' }

          = render 'shared/listing_projects', projects: @topic_projects, see_more_type: "projects", see_more_route: see_more_projects_path(id: @topic.id, type: @topic.class.name)

