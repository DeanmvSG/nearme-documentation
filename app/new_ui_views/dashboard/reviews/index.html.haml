- product_collection = @collections[:product_collection]
- seller_collection = @collections[:seller_collection]
- buyer_collection   = @collections[:buyer_collection]

- title t('dashboard.reviews.index.title')
- content_for :page_header do
  %h1
    - if @status == 'uncompleted'
      = t('dashboard.reviews.index.rate_your_experience')
    - else
      = t('dashboard.reviews.index.completed_feedback')

#reviews
  .form-inline
    .form-group
      = label_tag :"reviews-period", t('dashboard.reviews.feedback.see_reviews_from'), class: 'control-label'
      %select.form-control#reviews-period{:'data-period-selection' => true}
        %option{value: Review::LAST_30_DAYS, selected: period_selected?(Review::LAST_30_DAYS)}
          = t('dashboard.reviews.feedback.last_30_days')
        %option{value: Review::LAST_6_MONTHS, selected: period_selected?(Review::LAST_6_MONTHS)}
          = t('dashboard.reviews.feedback.past_6_months')
        - array_of_last_years(4).each do |number|
          %option{value: "#{number}", selected: period_selected?("#{number}")}
            = number

  - if @rating_systems[:seller_rating_system] && seller_collection.present? || @rating_systems[:product_rating_system]  && product_collection.present? || @rating_systems[:buyer_rating_system] && buyer_collection.present?
    %nav.panel-nav{:'data-internal-nav' => true}
      %ul.tabs.pull-left{role: 'tablist'}

        - if @rating_systems[:seller_rating_system].try(:values).try(:present?) && seller_collection.present?
          %li
            %a{href: "#seller-feedback", role: "tab"}
              = t('dashboard.reviews.feedback.seller_feedback')

        - if @rating_systems[:product_rating_system].try(:values).try(:present?) && product_collection.present?
          %li
            %a{href: "#product-reviews", role: "tab"}
              = t('dashboard.reviews.feedback.product_reviews')

        - if @rating_systems[:buyer_rating_system].try(:values).try(:present?) && buyer_collection.present?
          %li
            %a{href: "#guest-reviews", role: "tab"}
              = t('dashboard.reviews.feedback.guest_feedback')

    .panel
      .panel-body
        - if @rating_systems[:seller_rating_system].try(:values).try(:present?) && seller_collection.present?
          .panel-tab-container{id: "seller-feedback"}
            - seller_collection.each do |feedback|
              - if @rating_systems[:seller_rating_system][feedback.transactable_type_id].try(:first)
                = render "dashboard/reviews/feedback", feedback: feedback, subject: RatingConstants::HOST, rating_system: @rating_systems[:seller_rating_system][feedback.transactable_type_id].first, is_completed: @status == 'completed'

        - if @rating_systems[:product_rating_system].try(:values).try(:present?) && product_collection.present?
          .panel-tab-container{id: "product-reviews"}
            - product_collection.each do |feedback|
              - if @rating_systems[:product_rating_system][feedback.transactable_type_id].try(:first)
                = render "dashboard/reviews/feedback", feedback: feedback, subject: RatingConstants::TRANSACTABLE, rating_system: @rating_systems[:product_rating_system][feedback.transactable_type_id].first, is_completed: @status == 'completed'

        - if @rating_systems[:buyer_rating_system].try(:values).try(:present?) && buyer_collection.present?
          .panel-tab-container{id: "guest-reviews"}
            - buyer_collection.each do |feedback|
              - if @rating_systems[:buyer_rating_system][feedback.transactable_type_id].try(:first)
                = render "dashboard/reviews/feedback", feedback: feedback, subject: RatingConstants::GUEST, rating_system: @rating_systems[:buyer_rating_system][feedback.transactable_type_id].first, is_completed: @status == 'completed'
  - else
    .panel
      .panel-body
        %p.empty-resultset
          = t('dashboard.reviews.index.no_reviews')
