- title t('buy_sell_market.checkout.labels.order_details')

- content_for :page_header do
  %h1
    = link_to t('orders.title.orders_received'), dashboard_company_orders_received_index_path, class: 'hidden-xs hidden-sm'
    %span.hidden-xs.hidden-sm >
    = t('buy_sell_market.checkout.labels.order_details')


.panel
  .panel-body
    .orders-a
      %article.order
        %header
          %h2= t('buy_sell_market.checkout.labels.order_no', number: @order.number)


        .row
          .col-sm-3
            %h4= t 'buy_sell_market.checkout.labels.billing_address'
            %p
              = render 'dashboard/orders/address', address: @order.bill_address
              %br/
              = mail_to(@order.try(:user).try(:email))


          .col-sm-3
            %h4= t 'buy_sell_market.checkout.labels.shipping_address'
            %p= render 'dashboard/orders/address', address: @order.shipping_address

          .col-sm-3
            %h4= t 'buy_sell_market.checkout.labels.shipping_method'
            - @order.shipments.each do |shipment|
              %p
                = t('buy_sell_market.products.shipping.from')
                %strong= shipment.stock_location.name
                = t('buy_sell_market.products.shipping.via')
                %br
                %strong=shipment.selected_shipping_rate.name

          .col-sm-3
            %h4= t 'buy_sell_market.checkout.labels.payment'

            %p
              - if @charge_info && @charge_info.response['card']
                #{t('buy_sell_market.checkout.labels.ending_in')} #{@charge_info.response['card']['last4']}
                #{@charge_info.response['card']['name']}

              - @order.near_me_payments.each do |payment|
                - if payment.paid? && !payment.refunded?
                  %span.label.label-info
                    = t('buy_sell_market.checkout.labels.payments.captured')

                - elsif payment.paid? && payment.refunded?
                  %span.label.label-warning
                    = t('buy_sell_market.checkout.labels.payments.refunded')

                - elsif payment.failed?
                  %span.label.label-error
                    = t('buy_sell_market.checkout.labels.payments.failed')

                %p= link_to t("buy_sell_market.checkout.labels.payments.details"), dashboard_company_orders_received_payment_path(@order.number, payment), class: "btn btn-primary"

              - if @order.near_me_payments.blank?
                = link_to 'Capture', dashboard_company_orders_received_payments_path(@order.number), method: :post, data: { confirm: 'Are you sure you want to capture payment for this order?' }, class: 'btn btn-primary'

        %h2= t("buy_sell_market.checkout.labels.shipping")
        - @order.shipments.each do |shipment|
          %table.shipment-summary
            %tbody
              %tr
                %th= t("buy_sell_market.products.shipping.number")
                %td= shipment.number
              %tr
                %th= t("buy_sell_market.products.shipping.state")
                %td= shipment.state
              %tr
                %th= t("buy_sell_market.products.shipping.stock_location")
                %td= shipment.stock_location.name
              - if shipment.shippo_label_url.present?
                %tr
                  %th= t("buy_sell_market.products.shipping.label_url")
                  %td= shipment.shippo_label_url
              - if shipment.shippo_tracking_number.present?
                %tr
                  %td= t("buy_sell_market.products.shipping.tracking_number")
                  %td= shipment.shippo_tracking_number

          - if shipment.ready?
            %p
              = link_to t("buy_sell_market.products.shipping.mark_as_shipped"),ship_dashboard_company_orders_received_shipment_path(@order.number, shipment), data: { confirm: t("buy_sell_market.products.shipping.confirm") }, class: 'btn btn-primary'

        %h2= t 'buy_sell_market.checkout.labels.order_summary'
        .table-responsive
          %table.table
            %thead
              %th= t 'buy_sell_market.checkout.labels.item'
              %th= t 'buy_sell_market.checkout.labels.price'
              %th= t 'buy_sell_market.checkout.labels.qty'
              %th= t 'buy_sell_market.checkout.labels.total'

            %tbody
              - @order.line_items.each do |item|
                %tr
                  %td= item.name_with_link
                  %td= item.price
                  %td= item.quantity
                  %td= item.display_amount

        .row
          .col-sm-4.col-sm-push-8

            %table.payment-totals
              %tr
                %th= t 'buy_sell_market.checkout.labels.subtotal'
                %td= humanized_money_with_cents_and_symbol @order.monetize(@order.item_total)
              %tr
                %th= t 'buy_sell_market.checkout.labels.shipping'
                %td= humanized_money_with_cents_and_symbol @order.monetize(@order.shipment_total)
              %tr
                %th= t 'buy_sell_market.checkout.labels.tax'
                %td= humanized_money_with_cents_and_symbol @order.monetize(@order.additional_tax_total)
              %tr
                %th= t 'buy_sell_market.checkout.labels.service_fee'
                %td= humanized_money_with_cents_and_symbol @order.service_fee_guest_without_charges
              - if @order.additional_charges.any?
                - @order.additional_charges.each do |charge|
                  %tr
                    %th= charge.name
                    %td= humanized_money_with_cents_and_symbol charge.amount
              %tr
                %th.total= t 'buy_sell_market.checkout.labels.total2'
                %td.total= humanized_money_with_cents_and_symbol @order.total_amount_to_charge

        %br/

        .row
          .col-sm-9.col-sm-push-3
            .order-actions
              - if !@order.approved? && !@order.canceled?
                = link_to t('buy_sell_market.checkout.labels.actions.approve'),approve_dashboard_company_orders_received_path(@order), data: { confirm: t('buy_sell_market.checkout.labels.actions.confirm_approve') }, class: 'btn btn-primary'

              - if @order.allow_cancel? && @order.payment_state != 'paid'
                = link_to t('buy_sell_market.checkout.labels.actions.cancel'), cancel_dashboard_company_orders_received_path(@order), data: { confirm: t('buy_sell_market.checkout.labels.actions.confirm_cancel') }, class: 'btn btn-warning'

              - if @order.canceled?
                = link_to t('buy_sell_market.checkout.labels.actions.resume'),resume_dashboard_company_orders_received_path(@order), data: { confirm: t('buy_sell_market.checkout.labels.actions.confirm_resume') }, class: 'btn btn-primary'

          .col-sm-3.col-sm-pull-9
            %small= t('orders.labels.order_placed_html', date: @order.display_completed_at)
