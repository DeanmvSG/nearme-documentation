-# We are using generic_lessee_term here because the list may include reservations for multiple types of services
- title "#{t('general.generic_lessee_term').capitalize.pluralize} (#{@guest_list.recurring_bookings.size})"

- content_for :page_header do
  %h1= yield :title

- active_state = params[:state] || 'unconfirmed'

- tabs = ['unconfirmed', 'confirmed', 'overdue', 'archived'].map { |state| { name: t(state.to_sym, scope: [:dashboard, :host_reservations]), url:  dashboard_company_host_recurring_bookings_path(state: state), active: (params[:action] == 'index' && active_state == state) }}

= dashboard_panel_multi_tabs(tabs)

.panel
  .panel-body
    - if @guest_list.reservations_scope.empty? && @guest_list.recurring_bookings_scope.empty?
      = render 'dashboard/company/host_reservations/promote_locations', locations: @company.locations
    - else
      - only_reservations ||= false
      - if @guest_list.recurring_bookings.empty?
        %p.empty-resultset= no_reservations_info_for_state(@guest_list.state)
      - else
        .orders-a
          - @guest_list.recurring_bookings.each do |recurring_booking|
            = render 'dashboard/company/host_recurring_bookings/recurring_booking', recurring_booking: recurring_booking
