/*!
 * (v) Responsive Equalize (v20150403)
 * Equalize elements basing in their offset().top. Usage: $(els).vEqualize({height: (~ie8) ? 'height' : 'outerHeight'});
 */
(function($){$.fn.vEqualize=function(options){var settings=$.extend({breakpoint:0,debounce:100,height:'outerHeight',force:false},options);var debounce=function(func,wait,immediate){var timeout,args,context,timestamp,result;return function(){context=this;args=arguments;timestamp=new Date();var later=function(){var last=(new Date())-timestamp;if(last<wait){timeout=setTimeout(later,wait-last);}else{timeout=null;if(!immediate)result=func.apply(context,args);}};var callNow=immediate&&!timeout;if(!timeout){timeout=setTimeout(later,wait);}if(callNow)result=func.apply(context,args);return result;};};var $els=$(this);var equalize=function(){var data={};var max=0;$els.css({'height':'auto','min-height':0}).each(function(){var $el=$(this);var ot=Math.ceil($el.offset().top);var h=$el[settings.height]();max=Math.max(max,h);$el.data('ot',ot);if(!data.hasOwnProperty('w'+ot)||data['w'+ot]<h)data['w'+ot]=h;});$els.each(function(){var $el=$(this);if(settings.force){$el.css('min-height',max);}else{$el.css('min-height',data['w'+$el.data('ot')]);}});};var ww=0;var run=debounce(equalize,settings.debounce);$(window).on('resize.equalize',function(){var nww=$(window).width();if(nww!=ww){ww=nww;run();}}).triggerHandler('resize.equalize');};})(jQuery);
