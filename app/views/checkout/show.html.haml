.checkout-wizard{ :"data-shipping-country-controller" => true, :"data-payment-controller" => true  }
  .page-wrapper
    %section.checkout-form
      .container-fluid
        %h2= t 'buy_sell_market.checkout.labels.order_summary'
        - first_item = @order.line_items.first || OpenStruct.new(included_tax_total_rate: 0, additional_tax_total_rate: 0)

        = render 'summary', order: @order unless @order.instance_of?(Purchase)

        %table.payment-summary
          %thead
            %th= t 'buy_sell_market.checkout.labels.item'
            - unless first_item.included_tax_total_rate.zero?
              %th= t 'buy_sell_market.checkout.labels.net'
              %th= t 'buy_sell_market.checkout.labels.tax'
            %th= t 'buy_sell_market.checkout.labels.price'
            - unless first_item.additional_tax_total_rate.zero?
              %th= t 'buy_sell_market.checkout.labels.tax'
              %th= t 'buy_sell_market.checkout.labels.gross'
            %th= t 'buy_sell_market.checkout.labels.qty'
            %th= t 'buy_sell_market.checkout.labels.total'

          %tbody
            - @order.line_items.order(:created_at).decorate.each do |item|
              %tr{ data: { line_item_class: item.object.class.name.demodulize }}
                %td= item.name
                - unless item.included_tax_total_rate.zero?
                  %td= item.net_price
                  %td= item.included_tax_total_rate.to_s + "%"
                %td= item.unit_price
                - unless item.additional_tax_total_rate.zero?
                  %td= item.additional_tax_total_rate.to_s + "%"
                  %td= item.gross_price
                %td= item.quantity.to_i
                %td= item.total_price
            %tr
              %td
              %td
              - if !first_item.included_tax_total_rate.zero? || !first_item.additional_tax_total_rate.zero?
                %td
                %td
              %td= t 'buy_sell_market.checkout.labels.total2'
              %td.total= humanized_money_with_cents_and_symbol @order.total_amount
    - if @order.inactive?

      = simple_form_for @order, as: :order,  url: order_checkout_path(@order), html: { id: 'checkout-form', class: 'form-horizontal' } do |f|
        - if f.object.reservation_type
          = f.simple_fields_for :user, f.object.user do |user|
            = f.simple_fields_for :properties, f.object.properties do |properties_form|
              - custom_attribute_names = f.object.reservation_type.custom_attributes.collect { |custom_attribute| custom_attribute.name }
              - f.object.all_form_components.each_with_index do |form_component, index|
                - if form_component.form_fields_except(@order.skip_steps).any?
                  %section.checkout-form{"data-form-component-name": form_component.name_to_id}
                    .container-fluid
                      %h2= "#{index + 1}. " + form_component.name
                      - if !@order.reservation_type.step_checkout || form_component.id == @order.next_form_component_id
                        - form_component.form_fields.each do |form_field|
                          - model = form_field.keys.first
                          - field = form_field[model]
                          - next if field =~ /shipping/ && !@order.with_delivery?
                          - if model == 'user'
                            - if user.object.field_blank_or_changed?(field)
                              = render :partial => 'registrations/attributes', :locals => { f: user, only_inputs: [field.to_sym], country: @country}
                          - if model == 'buyer'
                            = user.simple_fields_for :buyer_profile, user.object.get_buyer_profile do |buyer_profile_form|
                              = buyer_profile_form.simple_fields_for :properties, user.object.buyer_profile.properties do |buyer_properties_form|
                                - if (category = buyer_profile_form.object.instance_profile_type.try(:categories).try(:roots).try(:detect) { |c| "Category - #{c.name}".to_sym == field.to_sym}).present?
                                  - if buyer_profile_form.object.category_blank_or_changed?(category)
                                    %div{"data-categories-controller": true}
                                      = render partial: 'shared/category_old_bootstrap', locals: { category: category, f: buyer_profile_form, categorizable: buyer_profile_form.object.instance_profile_type }
                                - else
                                  - if buyer_profile_form.object.field_blank_or_changed?(field)
                                    - buyer_profile_form.object.instance_profile_type.try(:custom_attributes).try(:each) do |attribute|
                                      = draw_attribute_for_form(attribute, buyer_properties_form) if field.to_sym == attribute.name.to_sym
                          - if model == 'reservation'
                            - if (category = f.object.reservation_type.try(:categories).try(:roots).try(:detect) { |c| "Category - #{c.name}".to_sym == field.to_sym}).present?
                              %div{"data-categories-controller": true}
                                = render partial: 'shared/category_old_bootstrap', locals: { category: category, f: f, categorizable: f.object.reservation_type }

                            - if custom_attribute_names.include?(field)
                              - if field == 'service_category'
                                = draw_attribute_for_form(f.object.reservation_type.custom_attributes.find_by(name: field), properties_form, false, disabled: get_disabled_categories(f.object.transactable) , checked: (f.object.properties[:service_category].presence || get_categories_from_search) - get_disabled_categories(f.object.transactable))
                              - else
                                = draw_attribute_for_form(f.object.reservation_type.custom_attributes.find_by(name: field), properties_form, false)
                            - else
                              = render :partial => 'checkout/attributes', :locals => { f: f, only_inputs: [field.to_sym], country: @country }
                      - if form_component.id == @order.next_form_component_id ||  @order.next_form_component_id.nil?
                        %br
                        .row
                          - if @order.completed_form_component_ids.any? && !@order.next_form_component_id.nil?
                            .span3
                              = link_to back_order_checkout_path(@order), class: 'btn blue prev', data: { disable_with: t('general.processing') } do
                                = t('buy_sell_market.checkout.buttons.back')

                          .span3
                            - if f.object.all_form_components.one?
                              %button.btn.blue.next{ data: { disable_with: t('general.processing') }}
                                = t('reservations_review.buttons.request')
                            - else
                              %button.btn.blue.next{ data: { disable_with: t('general.processing') }}
                                = t('buy_sell_market.checkout.buttons.continue')


        =# render partial: 'checkout_buttons', locals: { form: f }

- content_for :script do
  :javascript
    $(function() {
      $(document).trigger('init:phonenumberfieldsform.nearme', 'form#checkout-form');
      window.sessioncamConfiguration.customDataObjects.push( { key: "event", value: "booking_modal_opened" } );
      $(document).trigger('init:tooltips.nearme', '.reservation-summary');
    });

    (function($) {
        $.fn.goTo = function() {
            $('html, body').animate({
                scrollTop: $(this).offset().top - 85 + 'px'
            }, 'slow');
            return this; // for chaining...
        }
    })(jQuery);
    $(function() {
      $("[data-form-component-name='#{@order.next_form_component_name_to_id}']").goTo();
    });
