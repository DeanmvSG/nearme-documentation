- content_for :hero do
  %header#listing_search.container-fluid{class: result_view == 'map' ? 'with-map' : ''}
    .header-inner
      %form.search_results{:action => search_path(v: result_view), :method => "get"}
        - search_geofields.each do |geofield|
          = hidden_field_tag geofield, ''
        = hidden_field_tag :v, result_view
        = hidden_field_tag :ignore_search_event, 0
        = hidden_field_tag :page, 1
        .row-fluid
          .span12
            .list-map-toggle
              %a.map{ href: search_path(params.merge(v: platform_context.map_view)), class: active_class(result_view,platform_context.map_view), title: 'Map' }
                Map
              %a.list{ href: search_path(params.merge(v: 'list')), class: active_class(result_view, 'list'), title: 'List' }
                List
            .search-container
              %input#search{:name => "loc", :placeholder => platform_context.search_field_placeholder, :type => "text", :value => @searcher.query, :class => "query", :autocomplete => "off"}
              .geolocation
                %span.ico-crosshairs
            .search-icon.btn.btn-green
              %span.ico-search
            .search-filters{:'data-search-filters-container' => true, :class => platform_context.is_desksnearme? ? '' : 'two-filters'}
              - if platform_context.instance.location_types.count > 1
                = render :partial => 'search/filter', :locals => { :header_name => 'Location Types', :selected_values => params[:location_types_ids] || [], :input_name => 'location_types_ids[]', :options => @searcher.filterable_location_types.map { |lt| [lt.id, lt.name ] } }
              = render :partial => 'search/filter', :locals => { :header_name => "#{platform_context.bookable_noun} Types", :selected_values => params[:listing_types_ids] || [], :input_name => 'listing_types_ids[]', :options => @searcher.filterable_listing_types.map { |lt| [lt, lt] } }
              - if @filterable_industries
                = render :partial => 'search/filter', :locals => { :header_name => 'Industries', :selected_values => params[:industries_ids] || [], :input_name => 'industries_ids[]', :options => @searcher.filterable_industries.map { |i| [i.id, i.name] } }
