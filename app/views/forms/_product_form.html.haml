

= f.input :id, :as => :hidden if f.object.product.persisted?
= f.input :name, label: "Item Name", placeholder: "Name"
= f.input :description, label: "Item description", as: :text, placeholder: "Description"
= f.input :taxon_ids, label: "Category", :placeholder => "Enter a category"
.row
  .col-md-3
    %label Photos
  .col-md-9
    .loading{:style => "display: none"}
      = image_tag "spinner.gif"
      %br/
      .span= t('manage.listings.photos.waiting_for_photo_processing')
    = new_file_upload_input("#{f.object_name}[images_attributes][0][image]", dashboard_images_path, Spree::Image.new.image.thumbnail_dimensions[:medium], "Add Photo") do
      - # caches img so it is displayed even for the first photo. Without this, loader icon is not displayed for the first photo
      .hidden.thumbnail-processing
        .loading-icon
      = hidden_field_tag "#{f.object_name}", nil, :placeholder => t('ui.photo_uploader.caption'), :id => 'photo-item-input-template', 'data-no-caption' => true, 'data-association-name' => 'image', :disabled => true, 'data-number' => 0
      - unless @images.nil?
        - @images.each_with_index do |image|
          = get_fileupload_photo_html(image.image_url(:medium),
                                      dashboard_image_path(:id => image.id),
                                      edit_dashboard_image_path(image),
                                      :div,
                                      id: image.id) do
            = text_field_tag "#{f.object_name}[images_attributes][#{image.id}][caption]", image.caption, :placeholder => t('ui.photo_uploader.caption') if image.respond_to?(:caption)
            = hidden_field_tag "#{f.object_name}[image_ids][]", image.id
            = hidden_field_tag "#{f.object_name}[images_attributes][#{image.id}][id]", image.id
            = hidden_field_tag "#{f.object_name}[images_attributes][#{image.id}][position]", image.position, class: 'photo-position-input'

= f.input :price, as: :price, input_html: { currency: currency_symbol_from_code(Spree::Config[:currency] ) }

= f.input :quantity, as: :integer, :placeholder => "1"