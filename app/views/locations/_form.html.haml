%p
  A location is a physical address, to which you will be able to add bookable
  resources (listings). Once you've created a location, you can add listings to
  it.

= simple_form_for location do |f|
  - textile_hint = "(Parsed using #{link_to("Textile", "http://en.wikipedia.org/wiki/Textile_%28markup_language%29", :target => "_blank")}).".html_safe
  .clearfix
    .four.columns
      = f.input :company_id, :collection => current_user.companies, :prompt =>  "Select a company..."
    .six.columns
      Or... #{link_to "Create a company", new_company_path, :class => "btn btn-blue btn-medium"}
  = f.input :local_geocoding, :as => :hidden
  = f.input :latitude, :as => :hidden
  = f.input :longitude, :as => :hidden
  = f.input :formatted_address, :as => :hidden
  = f.input :name, :hint => "What's the name of your joint?"
  = f.input :address, :input_html => {:rows => 4}, :hint => "Don't be shy, we're going to geocode this, so it needs to be accurate."
  = f.input :description, :input_html => {:rows => 8}, :hint => ["What resources are available, i.e. internet, speed, public transport, coffee shops near by, coffee included? Why would people love your office? What kinds of drop-ins/coworkers would you prefer? Conditions of entry (e.g. must participate in stand up or something)", textile_hint].join(' ').html_safe
  - if current_user.admin?
    = f.association :creator, :select => "Select a creator..."
  = f.input :organization_ids, :collection => Organization.order('name').all, :as => :check_boxes, :label => "Professional Associations", :hint => "Please check any professional associations with which you are affiliated. You can then optionally restrict your listings to users who have identified themselves as a member of these associations."
  = f.input :amenity_ids, :label => "Amenities Provided", :collection => Amenity.order('name').all, :as => :check_boxes, :hint => "Please check any services you provide."
  = f.input :require_organization_membership, :input_html => { :class => "check_boxes" }, :label_html => { :class => "check_box" }, :label => "Require Association Membership", :hint => "This will only show your listings to members of the professional associations you selected above"

  .availability-rules
    = f.label :availability_template_id, "Availability"
    = f.select :availability_template_id, availability_template_options

    .custom-availability-rules
      - f.object.availability.each_day do |day, rule|
        %div{:class => "day day-#{day}"}
          = f.fields_for(:availability_rules, rule || AvailabilityRule.new(:day => day)) do |af|
            = af.hidden_field :id
            = af.hidden_field :day
            = af.object.day_name
            = af.select :open_time, availability_time_options
            = af.select :close_time, availability_time_options
            = af.check_box :_delete, :class => "closed", :checked => !af.object.open_time.present?
            = af.label :_delete, "Closed?", :class => "inline"

  = f.button :submit

:javascript
  function showLocationSuggestions(results) {
    if(results.length > 0) {
      var div = $("<div></div>").attr("id", "address-suggestions");
      var ul = $("<ul></ul>")
      var message = $("<p>Please select which location best matches where the location is</p>");
      for(var i = 0, l = results.length; i < l; i++) {
        var result = results[i];
        var loc = result['geometry']['location'];
        var link = $("<a href='#'></a>")
            .html(result['formatted_address'])
            .attr("data-lat", loc.lat())
            .attr("data-lng", loc.lng());
        var li = $("<li></li>").append(link);
        ul.append(li);
      }
      var el = div.append(message).append(ul);
    } else {
      var el = $("<div></div>").attr("id", "address-suggestions").html("No matches found. Please try another location.");
    }
    $("#location_address").after(el);
  }

  $("#location_address").bind('change', function() {
    var geocoder = new google.maps.Geocoder();
    var input = $(this);
    geocoder.geocode({ address: $(this).val() }, function(results, status) {
      $("#address-suggestions").remove();
      showLocationSuggestions(results);
    });
  });

  $("#address-suggestions li a").live("click", function() {
    var selection = $(this);
    $("#location_latitude").val(selection.attr("data-lat"));
    $("#location_longitude").val(selection.attr("data-lng"));
    $("#location_formatted_address").val(selection.html());
    $("#location_address").val(selection.html());
    $("#address-suggestions").remove();
    $("#location_address").focus();
    return false;
  });

  $(function() {
    $("#location_local_geocoding").val(true);
  });

