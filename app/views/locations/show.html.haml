- title render 'locations/title', location: @location
- canonical_url location_path(@location)

- content_for :meta_description do
  = "Book at #{@location.company.try(:name)}. #{mask_phone_and_email_if_necessary(@location.description).try(:truncate, 28)}"

- content_for :hero do
  %article#space
    .container-fluid
      .row-fluid.padding-row
        .span12.nested
          %h1= mask_phone_and_email_if_necessary(@location.name)

      .container-row
        .two-thirds.column.left
          = render 'locations/location_photos', location: @location

          .padding-row

          %section.listing-details
            .container-fluid
              .tab-content-container
                %ul.nav.nav-tabs.page-tabs{role: 'tablist'}
                  %li{ class: "#{ 'active' if !param_reviews_page_present? }" }
                    %a{'data-toggle' => 'tab', href: '#location-details', role: 'tab'}
                      = t 'buy_sell_market.products.labels.item_details'
                  - if @listing.has_reviews?
                    %li{ class: "#{ 'active' if param_reviews_page_present? }" }
                      %a{'data-toggle' => 'tab', href: '#listing-reviews', role: 'tab'}
                        #{t('buy_sell_market.products.labels.reviews')}
                        = "(#{@listing.reviews.count})"
                .tab-content
                  %article#location-details.location.listing.tab-pane{ class: "#{ 'active' if !param_reviews_page_present? }" }
                    = render 'locations/location_description'

                  - if @listing.has_reviews?
                    %article#listing-reviews.tab-pane{ class: "#{ 'active' if param_reviews_page_present? }" }
                      .rating-averages
                        .row-fluid.reviews-summary
                          .span3
                            %p= t 'buy_sell_market.products.labels.summary'
                          .span9
                            .rating
                              = render partial: 'buy_sell_market/products/stars', locals: { stars: @listing.try(:average_rating).try(:round) }
                        - if @rating_questions.present?
                          .row-fluid
                            - @rating_questions.each do |rating_question|
                              .span3
                                %p= rating_question.text
                              .span3
                                .rating
                                  = render partial: 'buy_sell_market/products/stars', locals: { stars:  (@listing.question_average_rating[rating_question.id] || 0).round }
                      -  @reviews.each do |review|
                        .review
                          .row-fluid
                            .span2
                              = image_tag review.user.avatar_url
                              %p= review.user.first_name
                            .span10
                              .rating
                                = render partial: 'buy_sell_market/products/stars', locals: { stars: review.rating }
                                %p.review-date= I18n.l(review.created_at, format: :month_year)
                              %p
                                = review.comment
                      = will_paginate_styled @reviews, param_name: 'reviews_page'

        .one-third.column.left
          .toggleable-booking-modules
            - @listings.each_with_index do |listing, index|
              = render 'locations/listings/booking', listing: listing, collapsed: index > 0
              .padding-row

          - if platform_context.instance.wish_lists_enabled?
            = render 'shared/components/wish_list_button', object: @location, link_to_class: 'btn btn-white btn-large ask'

          .padding-row

          -if @location.administrator
            = render 'locations/administrator', administrator: @location.administrator

          = render 'locations/google_map', location: @location

          .padding-row
          = render 'locations/social_buttons', location: @location

.clearfix.padding-row

- content_for :script do
  :javascript
    // Initialize the ui controller
    $(function() {
      new Space.Controller(
        $('article#space'),
        {
          bookings: {
            listings: #{raw location_listings_json},
            // Have we returned from setting up a session. If there are bookings, the JS controller
            // will trigger showing the booking confirmation modal.
            returnedFromSession: #{@initial_bookings.present? ? ("'" + @form_trigger + "'") : 'false'}
          }
        });
      });

- content_for :domready do
  - if @listing && params[:action] == 'ask_a_question'
    Modal.load('#{new_listing_listing_message_path(@listing)}')
