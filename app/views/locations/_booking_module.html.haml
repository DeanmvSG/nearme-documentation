- location_pretty_availability ||= pretty_availability_sentence(listing.location.availability)
- collapsed ||= false
- listing = listing.decorate
- old = lookup_context.transactable_type_id
- lookup_context.transactable_type_id = listing.transactable_type_id if old != listing.transactable_type_id
.booking-module-container{:class => "#{booking_module_class(listing)} #{collapsed ? " collapsed" : ""}", :'data-toggleable-booking-module' => true}
  .booking-module
    .booking-header
      %a.toggleable-booking-trigger{:href => location_path(listing.location, listing), :'data-booking-trigger' => true}
        %span.pull-right
          %i.ico-chevron-down
          %i.ico-chevron-right
        %span.booking-listing-name= mask_phone_and_email_if_necessary(listing.name)

    .booking-price-info
      %span= price_information(listing)
      %span.pull-right
        = listing.listing_type
    .booking-body
      .booking-price
        - if listing.schedule_booking?
          %span.label
            = "#{listing.price_with_currency(:fixed_price)}"
            %span.period= t('reservations.booking_module.fixed')
        - else
          %ul.pricing-tabs.nav.nav-tabs{:'data-pricing-tabs' => true}
            - if listing.action_free_booking?
              %li
                %span.label
                  = t 'booking_module.free'
            - if listing.action_hourly_booking?
              = content_tag :li, data: { hourly: true } do
                = link_to "#hourly-booking-#{listing.id}", class: "#{'possible' unless listing.hourly_price.to_f.zero? }" do
                  %span.label
                    - unless listing.hourly_price.to_f.zero?
                      = "#{listing.price_with_currency(:hourly_price)}"
                    - else
                      = '-'
                    %span.period= t('reservations.per_hour')
            - if listing.action_daily_booking?
              - if listing.transactable_type.action_daily_booking
                = content_tag :li, data: { daily: true } do
                  = link_to "#daily-booking-#{listing.id}", class: "#{'possible' unless listing.daily_price.to_f.zero? }" do
                    %span.label
                      - unless listing.daily_price.to_f.zero?
                        = "#{listing.price_with_currency(:daily_price)}"
                      - else
                        = '-'
                      %span.period= listing.overnight_booking? ? t('reservations.per_night') : t('reservations.per_day')

              - if listing.transactable_type.action_weekly_booking
                %li
                  = link_to "#daily-booking-#{listing.id}", class: "#{'possible' unless listing.weekly_price.to_f.zero? }" do
                    %span.label
                      - unless listing.weekly_price.to_f.zero?
                        = "#{listing.price_with_currency(:weekly_price)}"
                      - else
                        = '-'
                      %span.period= t('reservations.per_week')

              - if listing.transactable_type.action_monthly_booking
                %li
                  = link_to "#daily-booking-#{listing.id}", class: "#{'possible' unless listing.monthly_price.to_f.zero? }" do
                    %span.label
                      - unless listing.monthly_price.to_f.zero?
                        = "#{listing.price_with_currency(:monthly_price)}"
                      - else
                        = '-'
                      %span.period= t('reservations.per_month')

      .clearfix
      - if params[:controller] != 'locations/listings'
        .booking-description
          = render 'locations/booking_module_listing_description'

      - unless listing.schedule_booking?
        .tab-content

          .calendar-wrapper.date-start
            .calendar
              %span.ico-calender-end
              %span.calendar-text= t 'booking_module.start'
          - if listing.action_hourly_booking?
            .hourly-booking.tab-pane.calendar-wrapper.time-picker{id: "hourly-booking-#{listing.id}"}
              .time
                %span.ico-clock
                %span.time-text= t 'booking_module.nine'

          - if listing.action_daily_booking?
            .daily-booking.tab-pane.calendar-wrapper.date-end{id: "daily-booking-#{listing.id}"}
              .calendar
                %span.ico-calender-start
                %span.calendar-text= t 'booking_module.end'

      .clearfix
      - if listing.recurring_booking?
        .recurring-booking
          = simple_form_for :reservation_request, :url => review_listing_recurring_bookings_path(listing), data: { :'recurring-booking-form' => true, :'registration-url' => current_user ? nil : new_user_registration_path(return_to: location_listing_url(listing.location, listing)), hourly: listing.action_hourly_booking? } do |f|
            = f.hidden_field :quantity, class: 'quantity'
            = f.hidden_field :occurrences, class: 'occurrences'
            = f.hidden_field :start_on, class: 'start_on'
            = f.hidden_field :end_on, class: 'end_on'
            = f.hidden_field :start_minute, class: 'start_minute'
            = f.hidden_field :end_minute, class: 'end_minute'
            = f.hidden_field :reservation_type, class: 'reservation_type'
            #recurring-charges.hidden
            .controls
              %label.radio
                "#{t('booking_module.weekly_on')} #{Time.zone.now.strftime('%A')}"
                = f.radio_button 'recurring_radio_button', :weekly, data: { :'recurring-weekly' => true } do
                  = radio_button_tag 'recurring_radio_button', :weekly
              .or
                = t('form.or')
              %label.radio
                = t 'booking_module.custom'
                = f.radio_button 'recurring_radio_button', :custom, data: { :'recurring-custom'  => true} do
                  = radio_button_tag 'recurring_radio_button', :custom
            = f.select_recurring :schedule_params, [ IceCube::Rule.weekly.day(Time.zone.now.wday), IceCube::Rule.monthly.day_of_month([]).day_of_week(Time.zone.now.wday => [1]) ], allow_blank: false

      = render partial: 'locations/additional_charges', locals: { listing: listing }
      .quantity
        %span.resource{:'data-singular' => listing.listing_type, :'data-plural' => listing.listing_type.try(:pluralize)}= listing.listing_type
        = select_tag :quantity, options_for_select(1..listing.quantity), :class => 'quantity'

      .price{class: "#{'hidden' if listing.action_free_booking?}"}
        = t 'booking_module.total'
        %span #{currency_content_tag(listing.location.currency, 0.00, :span, { :rel => false })}

      .book
        - registration_url = new_user_registration_path(return_to: location_url(listing.location, listing, restore_reservations: true))
        - store_reservation_request_url = store_reservation_request_listing_reservations_path(listing)
        = simple_form_for :reservation_request, :url => review_listing_reservations_path(listing), html: { id: "reservation_request_form_#{listing.id}" } do |f|
          = hidden_field_tag :listing_id, listing.id
          = f.hidden_field :start_on
          = f.hidden_field :end_on
          = f.hidden_field :start_minute
          = f.hidden_field :end_minute
          .reservation-charges.hidden{:'data-reservation-charges' => true}
          = f.hidden_field :quantity
          - if listing.schedule_booking?
            = f.input :dates, collection: listing.next_available_occurrences(10).map { |d| l(d, format: :long) }, prompt: 'Choose date', label: false, input_html: { :'data-fixed-date-select' => true }
          - else
            = f.hidden_field :dates
          = f.hidden_field :reservation_type, class: 'reservation_type'

          - book_hash = {id:"book-#{listing.id}", class: "btn btn-green btn-large ", rel: "tooltip",
            :'data-original-title' => t('booking_module.notices.days_first'), :'data-behavior' => 'reviewBooking',
            :'data-listing-id' => listing.id, :'data-registration-url' => registration_url,
            :'data-store-reservation-request-url' => store_reservation_request_url,
            :'data-user-signed-in' => user_signed_in?, :'data-secured' => (not secure_links?),
            :'data-force-modal' => false}

          -if listing.has_action?('Request For Quote')
            - book_hash[:class] += (listing.action_free_booking? ? 'hidden' : 'span6')
            - rfq_class = (listing.action_free_booking? ? 'btn btn-green btn-large' :  'btn btn-gray-light btn-large offer-button span6' )
            - rfq_label = (listing.action_free_booking? ?  t('reservations.rfq') : t('reservations.offer'))

            - if listing.action_free_booking?
              .rfq-explanation
                %span= t('reservations.rfq_explanation')
            .row-fluid.booking-submit-row
              = f.submit rfq_label, id:"rfq-#{listing.id}", class: rfq_class, :'data-behavior' => 'RFQ', :'data-modal-method' => 'GET', :'data-modal-url' => new_listing_ticket_path(listing), :'data-force-modal' => true
              - if listing.action_free_booking?
                .hidden
                  = f.submit t('reservations.book'), book_hash
              - else
                = f.submit t('reservations.book'), book_hash
          -else
            = f.submit t('reservations.book'), book_hash


    .clearfix


  - content_for :domready do
    $("##{listing.to_param} .quantity select").customSelect();
    $('.pricing-tabs a').click(function (e) {
    e.preventDefault();
    $(this).tab('show');
    })
    $('.pricing-tabs a.possible:first').tab('show');

- lookup_context.transactable_type_id = old
