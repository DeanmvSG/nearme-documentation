= f.input :site_name
= f.input :meta_title
= f.input :description, :as => :limited_text, :limit => 250
= f.input :tagline
= f.input :address
= f.input :support_email
= f.input :contact_email
= f.input :phone_number
= f.input :support_url
= f.input :blog_url
= f.input :gplus_url
= f.input :twitter_url
= f.input :facebook_url

.row
  .col-md-3
    %label Photos
  .col-md-9
    - %w(logo_image logo_retina_image favicon_image icon_image icon_retina_image hero_image).each_slice(2) do |image_attrs|
      - image_attrs.each do |image_attr|
        .col-md-4
          .single-photo
            = new_file_upload_input('image_data', upload_theme_image_dashboard_company_white_label_path(image: image_attr), f.object.send("#{image_attr}_dimensions"), "Add Photo", {:"top-label" => "#{image_attr.humanize} (#{f.object.send("#{image_attr}_dimensions")[:width]}x#{f.object.send("#{image_attr}_dimensions")[:height]})", "no-multiple" => true}) do
              - if f.object.attributes[image_attr.to_s]
                = fileupload_photo(f.object.send("#{image_attr}_url"),
                  destroy_theme_image_dashboard_company_white_label_path(image: image_attr),
                  edit_theme_image_dashboard_company_white_label_path(image: image_attr),
                  :div)

.row
  .col-md-3
    %label Colors
  .col-md-9
    - Theme::COLORS.each_with_index do |color, index|
      = f.input "color_#{color}", :label => color.humanize do
        = f.text_field "color_#{color}",{ :type => :color, :value => f.object.hex_color(color).presence || hexify(Theme::COLORS_DEFAULT_VALUES[index]), 'data-default' => hexify(Theme::COLORS_DEFAULT_VALUES[index]), 'data-color' => color}
        = link_to "default", '', 'data-reset' => color
