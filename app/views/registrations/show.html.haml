- render_content_outside_container!

-# TODO: Separate verifications to box
-# TODO: Create recent activity box
-# TODO: Create shop info box

.profile
  .container.row-fluid.page-wrapper
    = render 'buy_sell_market/users/user_badge'
    .profile-content
      %ul.nav.nav-tabs
        - if buyable?
          - unless hide_tab?('products')
            %li.active
              %a{href: '#products', 'data-toggle' => 'tab'}= t 'user_profile.labels.tabs.products'
        - else
          - unless hide_tab?('services')
            %li.active
              %a{href: '#services', 'data-toggle' => 'tab'}= t 'user_profile.labels.tabs.services'

        - unless hide_tab?('reviews')
          %li
            %a{href: '#reviews', 'data-toggle' => 'tab'}= t 'user_profile.labels.tabs.reviews', count: 0

        - if platform_context.instance.user_blogs_enabled? && !hide_tab?('blog_posts')
          %li
            %a{href: '#blog_posts', 'data-toggle' => 'tab'}= t 'user_profile.labels.tabs.blog_posts'

      .profile-listings.tab-content
        - if buyable?
          - unless hide_tab?('products')
            #products.tab-pane.active
              - if @user.companies.first.present?
                - if @user.companies.first.products.count > 0
                  = render 'registrations/profile/tabs/products'
                - else
                  = render 'registrations/profile/no_content', tab: :products
        - else
          - unless hide_tab?('services')
            #services.tab-pane.active
              - if @user.companies.first.listings.count > 0
                = render 'registrations/profile/tabs/services'
              - else
                = render 'registrations/profile/no_content', tab: :services

        - unless hide_tab?('reviews')
          #reviews.tab-pane
            = render 'registrations/profile/no_content', tab: :reviews

        - if platform_context.instance.user_blogs_enabled?
          - unless hide_tab?('blog_posts')
            #blog_posts.tab-pane
              - if @user.has_published_blogs?
                = render 'registrations/profile/tabs/blog_posts'
              - else
                = render 'registrations/profile/no_content', tab: :blog_posts


-# TODO: Clean this mess and take useful stuff
-#- if buyable?
-#= render file: 'buy_sell_market/users/show'
-#- else
-#- if @user.job_title_and_company_name.blank? && @user.current_location_and_industry.blank? && @user.biography.blank? && @user.skills_and_interests.blank?
-#  = content_for :meta do
-#    %meta{name: "robots", content:"noindex"}
-#.row-fluid
-#  .span8.offset2
-#    %h1
-#      %span.ico-user.padding
-#        = @user.name
-#    .box.clearfix
-#      .span4.avatar
-#        - if @user.avatar.file.present?
-#          .part
-#            = image_tag @user.avatar.url(:big)
-#        .social.info.part
-#          =render_social_connection(@user, @user.social_connections_for('facebook'))
-#          =render_social_connection(@user, @user.social_connections_for('linkedin'))
-#          =render_social_connection(@user, @user.social_connections_for('twitter'))
-#          - if @user.social_url('instagram')
-#            =render 'social_connection', icon: 'ico-instagram', provider: 'instagram', count: false, link: @user.social_url('instagram'), rel: nil
-#          =render 'social_connection', icon: 'ico-mail', provider: 'mail', count: false, link: new_user_user_message_path(user_id: @user.slug), rel: 'modal'
-#      - if @user.job_title_and_company_name.present? || @user.current_location_and_industry.present? || @user.biography.present? || @user.skills_and_interests.present?
-#        .info.span8
-#          %h2= @user.job_title_and_company_name
-#          %h4= @user.current_location_and_industry
-#          %p= mask_phone_and_email_if_necessary(@user.biography)
-#          - if @user.skills_and_interests.present?
-#            %h4 Skills &amp; Interests
-#            %p= @user.skills_and_interests
-#          - if @user.has_published_blogs?
-#            %h2
-#              Recent blog posts
-#              =link_to '(blog)', user_blog_posts_list_path(user_id: @user.id)
-#            = render partial: 'dashboard/user_blog/blog_posts/excerpt', collection: UserBlogPostDecorator.decorate_collection(@user.recent_blogs), as: :blog_post
