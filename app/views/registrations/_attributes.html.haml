= render :partial => 'approval_requests/form', :locals => { f: f, object: current_user }
- only_inputs ||= []
- only_inputs.map!(&:to_sym)
= f.input :name if only_inputs.include?(:name)
- if !only_inputs.include?(:name)
  = f.input :first_name, input_html: { value: f.object.first_name } if only_inputs.empty? || only_inputs.include?(:first_name)
  = f.input :middle_name, input_html: { value: f.object.middle_name } if only_inputs.empty? || only_inputs.include?(:middle_name)
  = f.input :last_name, input_html: { value: f.object.last_name } if only_inputs.empty? || only_inputs.include?(:last_name)
  = f.simple_fields_for :user_instance_profiles, @user.user_instance_profiles.first do |profile_form|
    - if profile_form.object.instance_profile_type
      - profile_form.object.instance_profile_type.custom_attributes.each do |attribute|
        = draw_attribute_for_form(attribute, profile_form) if only_inputs.empty? || only_inputs.include?(attribute.name.to_sym)

= f.input :gender, collection: [['Male', 'male'], ['Female', 'female'], ['Unknown', 'unknown']], include_blank: :true if only_inputs.empty? || only_inputs.include?(:gender)
= f.input :email, label: "Email" if only_inputs.empty? || only_inputs.include?(:email)
= f.input :time_zone if only_inputs.empty? || only_inputs.include?(:time_zone)
= render :partial => 'registrations/phone_fields', :locals => { :f => f, :country => country } if only_inputs.empty? || only_inputs.include?(:phone)
= f.input :current_location, label: "Current location", as: :string if only_inputs.empty? || only_inputs.include?(:current_location)
= f.input :company_name, label: "Company name", as: :string if only_inputs.empty? || only_inputs.include?(:company_name)
= f.association :industries, :blank => false, :input_html => { :class => 'custom-select' } if only_inputs.empty? || only_inputs.include?(:industries)
= f.input :job_title, label: "Job title", as: :string if only_inputs.empty? || only_inputs.include?(:job_title)
= f.input :skills_and_interests, label: "Skills and interests" if only_inputs.empty? || only_inputs.include?(:skills_and_interests)
= f.input :biography, label: "Biography" if only_inputs.empty? || only_inputs.include?(:biography)
= f.input :password, :label => (resource.persisted? ? "Change password" : "Password" ) if only_inputs.empty? || only_inputs.include?(:password)
= f.input :drivers_licence_number if only_inputs.empty? || only_inputs.include?(:drivers_licence_number)
= f.input :gov_number, label: "Goverment Number" if only_inputs.empty? || only_inputs.include?(:goverment_number)
= f.input :twitter_url if only_inputs.empty? || only_inputs.include?(:twitter_url)
= f.input :linkedin_url if only_inputs.empty? || only_inputs.include?(:linkedin_url)
= f.input :facebook_url if only_inputs.empty? || only_inputs.include?(:facebook_url)
= f.input :google_plus_url if only_inputs.empty? || only_inputs.include?(:google_plus_url)
- if only_inputs.empty? || only_inputs.include?(:avatar)
  .single-photo
    = file_upload_input_with_label('Profile Photo',
      "avatar",
      avatar_path,
      current_user.avatar.thumbnail_dimensions[:medium],
      "Upload Photo",
      "no-multiple" => true,
      :error => f.object.errors.include?(:avatar).present? ? "Please upload avatar." : nil) do
      - if current_user.avatar.any_url_exists?
        = fileupload_photo(current_user.avatar_url(:medium),
          destroy_avatar_path,
          edit_avatar_path,
          :div)
- if only_inputs.empty? || only_inputs.include?(:phone)
  - content_for :domready do
    $(function(){ new PhoneNumbers.FieldsForm() });
