- resource ||= current_user
- only_inputs ||= []
- only_inputs.map!(&:to_sym)
= f.input :name if only_inputs.include?(:name)

- if only_inputs.empty? || only_inputs.include?(:approval_requests)
  = render :partial => 'approval_requests/form', :locals => { f: f, object: resource }

- if !only_inputs.include?(:name)
  = f.input :first_name, input_html: { value: f.object.first_name } if only_inputs.empty? || only_inputs.include?(:first_name)
  = f.input :middle_name, input_html: { value: f.object.middle_name } if only_inputs.empty? || only_inputs.include?(:middle_name)
  = f.input :last_name, input_html: { value: f.object.last_name } if only_inputs.empty? || only_inputs.include?(:last_name)
  = f.simple_fields_for :default_profile do |default_profile_form|
    = default_profile_form.simple_fields_for :properties, default_profile_form.object.properties do |properties_form|
      - (default_profile_form.object.instance_profile_type.try(:custom_attributes) || []).each do |attribute|
        = draw_attribute_for_form(attribute, properties_form) if only_inputs.empty? || only_inputs.include?(attribute.name.to_sym)
= f.input :email, label: "Email" if only_inputs.empty? || only_inputs.include?(:email)
= f.input :time_zone if only_inputs.empty? || only_inputs.include?(:time_zone)

= render :partial => 'registrations/phone_fields', :locals => { :f => f, :country => country } if only_inputs.empty? || only_inputs.include?(:phone)

- if only_inputs.empty? || only_inputs.include?(:current_address)
  = f.simple_fields_for :current_address, (f.object.current_address || f.object.build_current_address) do |address_form|
    = render :partial => 'addresses/column_form', :locals => { :f => address_form }

= f.input :company_name, label: "Company name", as: :string if only_inputs.empty? || only_inputs.include?(:company_name)
= f.association :industries, :blank => false, :input_html => { :class => 'custom-select' } if only_inputs.empty? || only_inputs.include?(:industries)
= f.input :password, :label => (f.object.persisted? ? t('general.change_password') : t('general.password') ) if only_inputs.empty? || only_inputs.include?(:password)
- if only_inputs.empty? || only_inputs.include?(:avatar)
  .single-photo
    = file_upload_input_with_label('Profile Photo',
      "avatar",
      avatar_path,
      resource.avatar.thumbnail_dimensions[:medium],
      "Upload Photo",
      "no-multiple" => true,
      :error => f.object.errors.include?(:avatar).present? ? "Please upload avatar." : nil) do
      - if current_user.attributes['avatar']
        = fileupload_photo(resource.avatar_url(:medium),
          destroy_avatar_path,
          edit_avatar_path,
          :div)

- if only_inputs.empty? || only_inputs.include?(:phone)
  - content_for :domready do
    $(document).trigger('init.phonenumberfieldsform');

- if only_inputs.empty? || Category.users.roots.map { |c| "Category - #{c.name}".to_sym }.include?(only_inputs.first)
  - category_name = only_inputs.first.to_s.split(" - ")[1]
  - category = Category.users.roots.where(name: category_name).first
  -if category.present?
    = f.simple_fields_for :default_profile do |f|
      = render partial: 'shared/category_old_bootstrap', locals: { category: category, f: f }
