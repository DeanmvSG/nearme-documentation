- if reservation.can_host_cancel?
  = form_for reservation, method: :post, url: host_cancel_dashboard_company_host_reservation_path(reservation, listing_id: reservation.listing) do |f|
    = f.submit 'Cancel', data: { confirm: 'Do you really want to cancel this reservation?' }, class: 'btn dark-gray full'

- if reservation.can_confirm?
  = form_for reservation, method: :post, url: confirm_dashboard_company_host_reservation_path(reservation, listing_id: reservation.listing) do |f|
    = f.submit 'Confirm', data: { confirm: 'Do you want to confirm this reservation?' }, class: 'btn blue full'

- if reservation.can_reject?
  = link_to 'Decline', '#', class: 'btn dark-gray full', data: { modal: true, href: rejection_form_dashboard_company_host_reservation_path(reservation, listing_id:reservation.listing) }

- if !reservation.paid? && (reservation.unconfirmed? || reservation.confirmed?)
  - if reservation.remote_payment?
    = link_to 'Request payment', request_payment_dashboard_company_host_reservation_path(reservation, listing_id: reservation.listing),
        class: 'btn red full', data: { confirm: 'Do you want to send payment request email for this guest?' }
  - elsif reservation.manual_payment?
    = form_for reservation, method: :post, url: mark_as_paid_dashboard_company_host_reservation_path(reservation, listing_id: reservation.listing) do |f|
      = f.submit 'Mark as paid', data: { confirm: 'Do you want to mark this reservation as paid?' }, class: 'btn grey full'
- if reservation.confirmed?
  - if reservation.shipments.outbound.first
    = link_to t('dashboard.host_reservations.shipping_label'), reservation.shipments.outbound.first.try(:label_url), class: 'btn blue full'
    = link_to t('dashboard.host_reservations.track_package'), reservation.shipments.outbound.first.try(:tracking_url_provider), class: 'btn blue full'
  - if reservation.shipments.inbound.first
    = link_to t('dashboard.host_reservations.return_label'), reservation.shipments.inbound.first.try(:label_url), class: 'btn gray full'
    = link_to t('dashboard.host_reservations.return_track_package'), reservation.shipments.inbound.first.try(:tracking_url_provider), class: 'btn gray full'
