.order{id: dom_id(recurring_booking)}
  .order-head
    .row
      .col-md-3
        %p= t('dashboard.user_recurring_bookings.placed')
        %p= l recurring_booking.created_at, format: :only_date

      .col-md-3
        %p= t('dashboard.user_recurring_bookings.starts_from')
        %p= l recurring_booking.start_on, format: :short

      .col-md-3
        %p= t("dashboard.user_recurring_bookings.#{recurring_booking.interval}_price")
        %p= recurring_booking.total_price

      - if recurring_booking.next_charge_date
        .col-md-3
          %p= t('dashboard.user_recurring_bookings.next_payment_at')
          %p= l recurring_booking.next_charge_date, format: :short

  .order-body
    .order-status
      %h3= recurring_booking.state.humanize.capitalize
      - if recurring_booking.unconfirmed?
        %p= recurring_booking.my_booking_status_info_new

    .row
      .order-item
        .col-md-8
          .row
            %h4 Subscription

          - if recurring_booking.rejected? && recurring_booking.rejection_reason.present?
            .row
              .inline
                %p= "#{t('dashboard.user_recurring_bookings.rejection_reason')}: #{recurring_booking.rejection_reason}"

          .row
            .inline
              - if recurring_booking.listing.present?
                = link_to recurring_booking.listing.try(:name), location_path(recurring_booking.listing.location, recurring_booking.listing)
                %br
                %span.address
                  = link_to recurring_booking.listing.location.address,
                      "http://maps.apple.com/?q=#{recurring_booking.listing.location.address}", target: '_blank'
              - else
                [listing deleted]
              %p QTY: #{recurring_booking.quantity}
              - if recurring_booking.guest_notes.present?
                %p= "#{t('dashboard.user_recurring_bookings.user_note')} #{recurring_booking.guest_notes}"

        .col-md-4.order-actions
          =# link_to 'See details', dashboard_user_recurring_booking_path(recurring_booking), class: 'btn blue full'
          - unless recurring_booking.archived?
            - if current_user == recurring_booking.owner
              = render 'dashboard/user_recurring_bookings/user_actions', recurring_booking: recurring_booking

      .order-item
        .col-md-12
          .row
            %h4= link_to "Periods", "#", data: { :'toggle-periods' => true }
          .content{ style: 'display: none;', data: { :'toggleable-periods' => true } }
            .row
              .col-md-6
                Start - End

              .col-md-3
                Total Amount
              .col-md-3
                Paid at
            - recurring_booking.recurring_booking_periods.each do |period|
              .row
                .col-md-6
                  = "#{I18n.l(period.period_start_date, format: :short)} - #{I18n.l(period.period_end_date, format: :short)}"
                .col-md-3
                  = humanized_money_with_cents_and_symbol(current_user == recurring_booking.host ? period.total_amount - period.service_fee_amount_guest : period.total_amount)
                .col-md-3
                  = "#{I18n.l(period.paid_at, format: :short)}" if period.paid_at?

