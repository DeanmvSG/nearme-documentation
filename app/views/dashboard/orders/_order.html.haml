- hidden = [:review, :feedback] # TODO: Remove when implemented
- received_orders = params[:controller].include?('received')

- if received_orders
  - manage = true
  - feedback_caption = t('orders.buttons.buyer_feedback')
  - details_url = dashboard_company_orders_received_path(order)
- else
  - manage = false
  - feedback_caption = t('orders.buttons.seller_feedback')
  - details_url = dashboard_order_path(order)

.order
  .order-head
    .row
      .col-md-3
        %p= t('orders.labels.order_placed')
        %p= order.display_completed_at
      .col-md-3
        %p= t('orders.labels.total')
        %p= order.total_amount_to_charge
      .col-md-3
        %p= t('orders.labels.ship_to')
        %p= order.display_shipping_address
      .col-md-3
        %p #{t('orders.labels.order')} ##{order.number}
        = link_to t('orders.buttons.order_details'), details_url

  .order-body
    .order-status
      %h3= order.status
      - if order.shipped?
        %p
          #{t 'orders.labels.est_delivery'} #{order.estimated_delivery}
    .row
      - item = order.line_items.first

      .row
        .order-item
          = render 'dashboard/orders/line_item', item: item

          .col-md-4.order-actions
            -# Jaromir: Disabled due to the missing UI on product listing
            -#- if order.shipped? && !order.shipments.first.tracking
            -#  = link_to order.shipments.first.tracking, target: '_blank' do
            -#    %col-md-.btn.blue= t'orders.buttons.track'

            - if has_active_rating_system? && order.reviewable? && !received_orders

              - if item.has_seller_reviews?
                = link_to dashboard_reviews_path(tab: 'completed') do
                  %span.btn.blue= t 'orders.buttons.update_seller_feedback'
              - else
                = link_to dashboard_reviews_path do
                  %span.btn.gray= t 'orders.buttons.seller_feedback'
              %br
              - if item.has_product_reviews?
                = link_to dashboard_reviews_path(tab: 'completed') do
                  %span.btn.blue= t 'orders.buttons.update_product_review'
              - else
                = link_to dashboard_reviews_path do
                  %span.btn.gray= t 'orders.buttons.product_review'

            - if manage
              - if order.approved?
                .order-tracking
                  = image_tag 'themes/buy_sell/green-check.png'
                  %p.confirmed Order approved
              - else
                .order-tracking
                  = image_tag 'themes/buy_sell/x-red.png'
                  %p.unconfirmed Order not approved

              - if order.pending_payments.empty?
                .order-tracking
                  = image_tag 'themes/buy_sell/green-check.png'
                  %p.confirmed No payments pending
              - else
                .order-tracking
                  = image_tag 'themes/buy_sell/x-red.png'
                  %p.unconfirmed Payment not captured

              - if order.shipped?
                .order-tracking
                  = image_tag 'themes/buy_sell/green-check.png'
                  %p.confirmed Shipped
              - else
                .order-tracking
                  = image_tag 'themes/buy_sell/x-red.png'
                  %p.unconfirmed Not shipped

      - order.line_items.each_with_index do |item, index|
        - next if index == 0
        .row
          .additional-item
            = render 'dashboard/orders/line_item', item: item
            .col-md-4
            - if order.reviewable? && !received_orders
              - if item.has_product_reviews?
                = link_to dashboard_reviews_path(tab: 'completed') do
                  %span.btn.blue= t 'orders.buttons.update_product_review'
              - else
                = link_to dashboard_reviews_path do
                  %span.btn.gray= t 'orders.buttons.product_review'

      - if order.payment_documents.length > 0
        = t('dashboard.payment_documents.files_sent_to_me')
      - order.payment_documents.each do |pd|
        .payment-document
          = link_to (pd.try(:payment_document_info).try(:document_requirement).try(:label) || pd.file.file_name), pd.file.url, target: '_blank'

