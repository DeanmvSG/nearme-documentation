- if f.object.is_a?(BaseForm)
  -if category.present?
    - if category.autocomplete?
      = f.input :"#{category.name}", as: :string, label: category.translated_name, :placeholder => "Enter a category", input_html: { "data-category-autocomplete" => true, "data-category-id" => category.id, "data-items" => f.object.common_categories_json(category), :"data-api" => dashboard_api_category_path(category), value: f.object.common_categories(category).map(&:id).join(',')}, required: category.mandatory?
    - else
      - hint_search_path = "simple_form.hints.shared.categories.#{category.permalink}"
      - hint = is_i18n_set?(hint_search_path) ? t(hint_search_path) : nil
      = f.input :"#{category.name}", as: :category_tree, label: category.translated_name, required: category.mandatory?, hint: hint, category: category
- else
  - # as soon as we replace all form components with form configuration, we will be able to remove this
  - if category.present?
    - error = f.object.errors[category.name.to_sym]

    - f.object.errors[:category_ids] = error.first if error.present?

    - if category.autocomplete?
      = f.input :category_ids, as: :string, label: category.translated_name, :placeholder => "Enter a category", input_html: { "data-category-autocomplete" => true, "data-category-id" => category.id, "data-items" => f.object.common_categories_json(category), :"data-api" => dashboard_api_category_path(category), value: f.object.common_categories(category).map(&:id).join(',')}, required: category.mandatory?

    - else
      - hint_search_path = "simple_form.hints.shared.categories.#{category.permalink}"
      - hint = is_i18n_set?(hint_search_path) ? t(hint_search_path) : nil
      = f.input :category_ids, as: :category_tree, label: category.translated_name, required: category.mandatory?, hint: hint, category: category
