= form_tag dashboard_reviews_path, class: 'update-form' do
  .review{'data-rating-system-id' => rating_system.id, 'data-reviewable-id' => feedback.reviewable_id, 'data-reviewable-type' => feedback.reviewable_type}
    = hidden_field_tag :reviewable_id, feedback.reviewable_id
    = hidden_field_tag :reviewable_type, feedback.reviewable_type
    = hidden_field_tag :rating_system_id, rating_system.id
    .row-fluid.clearfix
      .span8
        = render 'review_image', order_image: feedback.order_image, review_target_image: feedback.review_target_image(rating_system.subject), feedback: feedback, feedback_type: rating_system.subject
        .review-actions
          = render 'review_title', review_title: feedback.review_title, review_target_title: feedback.review_target_title(rating_system.subject), feedback: feedback, feedback_type: rating_system.subject
          %p= t('dashboard.reviews.feedback.your_submitted_feedback').upcase
          .wrapper
            .rating.non-editable{'data-score' => feedback.rating}
            .actions
              %a.edit{'data-review-id' => feedback.id}
                = t('dashboard.reviews.feedback.edit')
              = link_to dashboard_review_path(feedback), method: :delete, class: 'remove',
                  data: { confirm: t('dashboard.reviews.feedback.are_you_sure') } do
                %i.ico-trash

          = render 'show_details_link', subject: subject, id: feedback.reviewable_id

      .span4
        = render 'order_info_created', created_at: feedback.reviewable.created_at
        .order-info
          = render 'order_info_id', id: feedback.reviewable_id
          - if feedback.decorate.line_item?
            = link_to t('dashboard.reviews.feedback.view_order_details'), dashboard_order_path(feedback.reviewable.order)
        .order-info
          %p= feedback.decorate.link_to_user_profile

          - if platform_context.support_email
            %p
              = mail_to platform_context.support_email, t('dashboard.reviews.feedback.contact_name_support', name: PlatformContext.current.instance.name)

    .reviews-additional-content.collapse{id: "#{subject}-#{feedback.reviewable.id}"}
      - feedback.rating_answers.reject { |answer| answer.rating_question.nil? }.each do |answer|
        .row-fluid.clearfix
          .span12
            %span= answer.rating_question.text
            .additional-ratings{'data-question-id' => answer.rating_question_id, 'data-answer-id' => answer.id}
              .rating.non-editable{'data-score' => answer.rating}

      - unless feedback.comment.blank?
        .row-fluid
          .span12
            %p.comments-title
              = t('dashboard.reviews.feedback.comments').upcase
            .comment=feedback.comment
