.order{id: dom_id(reservation)}
  .order-head
    .row
      .col-md-3
        %p Reservation placed
        %p= l reservation.created_at, format: :only_date_short

      .col-md-3
        %p Requested date
        %p.dates
          - if reservation.periods.first.read_attribute(:start_minute).present?
            = reservation.long_dates
          - else
            = reservation.long_dates

      .col-md-4
        %p Requested time
        %p
          - if reservation.periods.first.read_attribute(:start_minute).present?
            - reservation_period = reservation.periods.first.decorate
            = reservation_period.hourly_summary(false).gsub('<br />', ' ').html_safe
          - else
            N/A

      .col-md-2
        %p Total
        %p= reservation.total_price

  .order-body
    .order-status
      %h3= reservation.state.humanize.capitalize
      - if reservation.state == 'unconfirmed'
        %p
          #{t('dashboard.user_reservations.pending_confirmation')} <strong>#{reservation.time_to_expiry(reservation.expiry_time)}</strong>.
        %p
          - if reservation.active_merchant_payment?
            - if reservation.billing_authorization.present?
              %p= I18n.t('dashboard.user_reservations.money_info')
      - if reservation.confirmed?
        - if reservation.active_merchant_payment?
          - if reservation.cancelable? && reservation.cancellation_policy_penalty_percentage.to_i > 0
            %p= I18n.t('dashboard.user_reservations.penalty_info', penalty: reservation.cancellation_policy_penalty_percentage)

    .row
      .order-item
        .col-md-8
          .row
            .inline
              - if reservation.listing.present? && !reservation.listing.deleted?
                = link_to reservation.listing.try(:name), location_path(reservation.listing.location, reservation.listing)
                %br
                %span.address
                  = link_to reservation.listing.location.address,
                      "http://maps.apple.com/?q=#{reservation.listing.location.address}", target: '_blank'
              - else
                = "#{reservation.listing.try(:name)} [listing deleted]"
              %p QTY: #{reservation.quantity}
              - if reservation.guest_notes.present?
                %p= t('dashboard.user_reservations.exclusive_price_guests_notes', guest_notes: reservation.guest_notes)

        .col-md-4.order-actions
          - unless reservation.archived?
            - if reservation.cancelable?
              = form_for reservation, method: :post, url: user_cancel_dashboard_user_reservation_path(reservation) do |f|
                = f.submit I18n.t('general.cancel'), data: { confirm: I18n.t("dashboard.user_reservations.cancel", penalty: reservation.confirmed? && reservation.cancellation_policy_penalty_percentage.to_i > 0 ? I18n.t('dashboard.user_reservations.penalty_info', penalty: reservation.cancellation_policy_penalty_percentage) : '') }, class: 'btn dark-gray full'

            - if reservation.remote_payment? && !reservation.paid? && !reservation.archived?
              = link_to 'Pay now', remote_payment_dashboard_user_reservation_path(reservation), class: 'btn blue full'

            - if reservation.confirmed?
              = link_to 'Add to iCal', export_dashboard_user_reservation_path(reservation, format: :ics), class: 'btn gray full'
              - if reservation.shipments.inbound.first
                = link_to t('dashboard.user_reservations.return_label'), reservation.shipments.inbound.first.try(:label_url), class: 'btn gray full'
              - if reservation.shipments.outbound.first
                = link_to t('dashboard.user_reservations.track_package'), reservation.shipments.outbound.first.try(:tracking_url_provider), class: 'btn gray full'

    - if reservation.payment_documents.present?
      .row
        - reservation.payment_documents.each do |pd|
          .payment-document
            = pd.decorate.uploaded_file_link
