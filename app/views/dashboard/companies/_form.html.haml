= render :partial => 'approval_requests/form', :locals => { f: f }

= f.input :name, :as => :limited_string, :limit => 50

= f.input :description, :as => :limited_text, :limit => 250, :input_html => { :maxlength => 250}

= f.association :industries, :blank => false, :required => true,  as: :select, input_html: { class: 'selectpicker', "data-live-search" => "true", multiple: true }

= f.simple_fields_for :company_address, (f.object.company_address.presence || f.object.build_company_address) do |address_form|
  = render :partial => 'address', :locals => { :f => address_form, label: 'Company Address' }

= f.input :url, label: "Website"
= f.input :email

-if false # TODO talk to Istvan about this functionality (not included in mockup)
  / = f.input :mailing_address, :label => tooltip(t("simple_form.hints.company.mailing_address", bookable_noun: platform_context.bookable_noun.pluralize), t('simple_form.labels.company.mailing_address')), hint: false if (only_inputs.empty? || only_inputs.include?(:mailing_address))

  / - if (only_inputs.empty? || only_inputs.include?(:paypal))
  /   %h2.with-margin Payouts via Paypal
  /   = f.input :paypal_email, :label => tooltip(t("simple_form.hints.company.paypal_email"), t('simple_form.labels.company.paypal_email')), hint: false

  / - if (only_inputs.empty? || only_inputs.include?(:ach))
  /   - if platform_context.supported_payout_via_ach?
  /     %h2.with-margin Payouts via ACH (US only)
  /     - if f.object.instance_clients.first.try(:encrypted_balanced_user_id)
  /       %div= t("simple_form.company.current_bank_account", last_four_digits: f.object.instance_clients.first.bank_account_last_four_digits)
  /       %div Update:
  /     - if f.object.errors[:bank_account_form].present?
  /       .bank_account_fields
  /         .flash.error
  /           %ul
  /             - f.object.errors[:bank_account_form].each do |e|
  /               %li= e
  /             %li Unfortunately we could not process the credentials you have entered.

  /     = f.input :bank_owner_name
  /     = f.input :bank_routing_number
  /     = f.input :bank_account_number
