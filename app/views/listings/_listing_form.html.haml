- only_inputs = [] if only_inputs.nil?
- photo_input_name_prefix = "listing" if local_assigns[:photo_input_name_prefix].nil?

- if f.object.free?
  - enable_inputs_daily, enable_inputs_hourly, enable_inputs_free = false, false, true
- elsif f.object.hourly_reservations
  - enable_inputs_daily, enable_inputs_hourly, enable_inputs_free = false, true, false
- else
  - enable_inputs_daily, enable_inputs_hourly, enable_inputs_free = true, false, false


.listing-enabled-container 
  %div{:class => "control-group"}
    = f.label :enabled, 'Enabled?', :class => 'control-label'
    .controls
      .switch{'data-on-label' => "", 'data-off-label' => ""}
        = f.check_box :enabled

= f.input :id, :as => :hidden if only_inputs.empty? || only_inputs.include?(:id)
= f.input :name, :label => "#{current_instance.bookable_noun} name", :placeholder => 'Examples, "Shared Desks", "Meeting Room", "Private Office"' if only_inputs.empty? || only_inputs.include?(:name)
= f.input :description, :label => "#{current_instance.bookable_noun} description", :input_html => { :maxlength => 250}, :placeholder => 'Describe the individual listing that will be rented' if only_inputs.empty? || only_inputs.include?(:description)
= f.association :listing_type, :label => "#{current_instance.bookable_noun} type", :input_html => { :class => 'selectpicker' } if only_inputs.empty? || only_inputs.include?(:listing_type)
= f.input :quantity, :label => 'Quantity available', :placeholder => 2, :input_html => { :class => "mini" } if only_inputs.empty? || only_inputs.include?(:quantity)

- if content_for? :currency
  = yield(:currency)
- else
  = hidden_field_tag '', listing.location.currency, :id => 'currency-select'

- if only_inputs.empty? || only_inputs.include?(:price)
  %div{:class => "control-group #{"error" if f.object.errors.include?(:free).present?}"}
    = f.label :daily_price, 'Price', :class => 'control-label flush-top' do
      %abbr{:title => "required"} *
      Price

    .controls
      %div.price-inputs-daily
        %label.radio
          = f.radio_button :price_type, "daily", :checked => enable_inputs_daily
          Daily, weekly, or monthly

        .price-input-options
          .price-inputs-wrapper.left
            = render 'manage/listings/price_field', :f => f, :price => "daily", :label => "day", :include_checkbox => true
            = render 'manage/listings/price_field', :f => f, :price => "weekly", :label => "week", :include_checkbox => true
            = render 'manage/listings/price_field', :f => f, :price => "monthly", :label => "month", :include_checkbox => true

      %div.price-inputs-hourly
        %label.radio
          = f.radio_button :price_type, "hourly", :checked => enable_inputs_hourly
          Hourly

        .price-input-options
          .price-inputs-wrapper.left
            = render 'manage/listings/price_field', :f => f, :price => "hourly", :label => "hour"

      - if f.object.errors.include?(:hourly_reservations).present?
        %p.error-block= f.object.errors[:hourly_reservations].first

      %div.price-inputs-free
        %label.radio
          = f.radio_button :price_type, "free", :checked => enable_inputs_free
          Free

      - if f.object.errors.include?(:price_type).present?
        %p.error-block= f.object.errors[:price_type].first

  - if f.object.errors.include?(:free).present?
    %p.error-block
      = 'must be free if all prices are zero'

- if only_inputs.empty? || only_inputs.include?(:availability_rules)
  .control-group
    = render :partial => 'availability_rules/form', :locals => { :f => f }


- if only_inputs.empty? || only_inputs.include?(:confirm_reservations)
  %div{:class => "control-group #{"error" if f.object.errors.include?(:confirm_reservations).present?}"}
    = f.label :confirm_reservations, 'Confirm guest bookings', :class => 'control-label'
    .controls
      .switch{'data-on-label' => "", 'data-off-label' => ""}
        = f.check_box :confirm_reservations

- if only_inputs.empty? || only_inputs.include?(:photos)
  = file_upload_input_with_label('Photos',
                                  "#{photo_input_name_prefix}[photos_attributes][0][image]",
                                  manage_photos_path,
                                  Photo.new.image.thumbnail_dimensions[:medium],
                                  "Browse",
                                  :required => false,
                                  :error => f.object.errors.include?(:photos).present? ? "Please upload at least one photo." : nil) do
    - # caches img so it is displayed even for the first photo. Without this, loader icon is not displayed for the first photo
    .hidden.thumbnail-processing
      .loading-icon
    = hidden_field_tag "#{photo_input_name_prefix}[photos_attributes]", nil, :placeholder => 'Enter Caption...', :id => 'photo-item-input-template', :disabled => true, 'data-number' => 0
    - unless @photos.nil?
      - @photos.each_with_index do |photo|
        - if photo.image.any_url_ready?
          = get_fileupload_photo_html(photo.image_url(:medium),
                                      destroy_space_wizard_photo_path(:id => photo.id),
                                      edit_manage_photo_path(photo),
                                      :div,
                                      id: photo.id) do
            = text_field_tag "#{photo_input_name_prefix}[photos_attributes][#{photo.id}][caption]", photo.caption, :placeholder => 'Enter Caption...'
            = hidden_field_tag "#{photo_input_name_prefix}[photos_attributes][#{photo.id}][id]", photo.id
            = hidden_field_tag "#{photo_input_name_prefix}[photos_attributes][#{photo.id}][position]", photo.position, class: 'photo-position-input'

.hidden
  - Money::Currency.table.values.each do |c|
    %span{:id => "currency_#{c[:iso_code]}"} 
      = c[:symbol]
