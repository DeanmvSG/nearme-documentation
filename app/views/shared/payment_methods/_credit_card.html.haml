- credit_card = f.object.credit_card || f.object.build_credit_card
.nm-credit-card-fields
  - if f.object.respond_to?(:authorized?) && f.object.authorized?
    = t 'payments.already_authorized'
  - else
    - based_collection = current_user.instance_clients.for_payment_gateway(payment_method.payment_gateway_id, current_instance.test_mode?).first.try(:credit_cards).try(:select, &:active?).try(:map) { |cc| [I18n.t('credit_cards.masked_number', last4: cc.last_4), cc.id] } || []
    - default_option = based_collection.first.present? ? based_collection.first[1] : 'custom'
    - selected_option = f.object.chosen_credit_card_id.presence || f.object.credit_card_id ||default_option

    = f.input :chosen_credit_card_id, as: :radio_buttons, collection: based_collection << [I18n.t('payments.cc_fields.add_new'), 'custom'], label: false, checked: selected_option, wrapper_html: { class: 'nm-credit-card-option-select' }

    - new_cc_klass = 'nm-new-credit-card-form'
    - new_cc_klass += ' hidden' unless f.object.chosen_credit_card_id == 'custom'

    %div{ class: new_cc_klass }
      = f.simple_fields_for :credit_card_attributes, credit_card do |form|

        .has-error
          = f.error :base
          = form.error :base

        .nm-new-credit-card-form-header
          %h3= t 'payments.heading'
          = image_tag 'credit-cards.png', alt: "Visa, Mastercard, American Express, Discover"

        .nm-new-credit-card-form-name-container
          = form.input :first_name, required: true, label: t('payments.cc_fields.first_name'), input_html: { value: (form.object.first_name.presence || current_user.first_name), autocomplete: :off, class: 'sessioncamexclude' }

          = form.input :last_name, required: true, label: t('payments.cc_fields.last_name'), input_html: { value: (form.object.last_name.presence || current_user.last_name), autocomplete: :off, class: 'sessioncamexclude' }

        = form.input :number, required: true, label:  t('payments.cc_fields.card_number'), input_html: { placeholder: '•••• •••• •••• ••••', class: 'sessioncamexclude', pattern: "[0-9]*", autocomplete: :off, 'data-card-number' => true }

        .nm-new-credit-card-form-exp-date-container
          = form.input :month, as: :select, label: t('payments.cc_fields.expiration_date_month_html'), collection: credit_card_date[:month], input_html: { prompt: false, class: 'sessioncamexclude', placeholder: 'Select month'}

          = form.input :year, as: :select, label: t('payments.cc_fields.expiration_date_year_html'), collection: credit_card_date[:year], input_html: { prompt: false, class: 'sessioncamexclude', placeholder: 'Select year' }

          = form.input :verification_value, label: t('payments.cc_fields.security_code'), required: true, input_html: { placeholder: 'CCV', class: 'sessioncamexclude', pattern: "[0-9]*", autocomplete: "off", 'data-card-code' => true, size: 3 }

    = render 'listings/reservations/confirm_reservations', f: f


:javascript
  $(document).trigger('init:paymentMethodCreditCard.nearme');

= javascript_include_tag "https://js.stripe.com/v1/"
