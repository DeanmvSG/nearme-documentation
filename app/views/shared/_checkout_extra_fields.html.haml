= f.simple_fields_for f.object.checkout_extra_fields do |cef|
  = cef.simple_fields_for cef.object.user do |uf|
    - if uf.object.field_blank_or_changed?(:first_name)
      = uf.input :first_name, required: true
    - if uf.object.field_blank_or_changed?(:last_name)
      = uf.input :last_name, required: true
    - if defined?(show_company_name) && show_company_name && uf.object.field_blank_or_changed?(:company_name)
      = uf.input :company_name, as: :string
    - if uf.object.field_blank_or_changed?(:country_name)
      = uf.input :country_name, as: :select, collection: user_country_name_options, selected: user_country_default(@country), input_html: { class: "select2", data: { 'country-selector' => 1 } }
    - if uf.object.field_blank_or_changed?(:phone)
      = uf.input :phone, required: true, wrapper: :bs_phone
    - if uf.object.field_blank_or_changed?(:mobile_number)
      = uf.input :mobile_number, required: true, wrapper: :bs_phone

    = uf.simple_fields_for :properties, uf.object.properties do |properties_form|
      - (uf.object.instance_profile_type.try(:custom_attributes) || []).each do |attribute|
        - if attribute.public? && ::CustomAttributes::CustomAttribute::FormElementDecorator.new(attribute).options[:required] && uf.object.field_blank_or_changed?(attribute.name)
          = draw_attribute_for_form(attribute, properties_form)

    = uf.simple_fields_for :buyer_profile, uf.object.buyer_profile  do |buyer_profile_form|
      = buyer_profile_form.simple_fields_for :properties, buyer_profile_form.object.properties do |properties_form|
        - (buyer_profile_form.object.instance_profile_type.try(:custom_attributes) || []).each do |attribute|
          - if attribute.public? && buyer_profile_form.object.field_blank_or_changed?(attribute.name)
            = draw_attribute_for_form(attribute, properties_form)

      - buyer_profile_form.object.instance_profile_type.try(:categories).try(:roots).find_each do |category|
        - if buyer_profile_form.object.category_blank_or_changed?(category)
          = render partial: 'shared/category_old_bootstrap', locals: { category: category, f: buyer_profile_form, categorizable: buyer_profile_form.object.instance_profile_type }

    = render :partial => 'approval_requests/form', :locals => { f: uf, object: uf.object, only_required: true, only_missing: true }

- content_for :domready do
  new CategoriesController($('form'));

