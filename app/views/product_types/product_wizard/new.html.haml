- render_without_left_menu!

.page-banner
  %h1
    = t('onboarding_wizard.list_a_new', name: @product_type.name)
  - if @errors.present?
    %div{class: "alert alert-danger alert-dismissible", role: "alert", style: 'position: relative; cursor: inherit; padding: 20px;'}
      %h1{style: 'margin-bottom: 15px'}= t('flash_messages.space_wizard.complete_fields')
      = @errors.html_safe

= simple_form_for @boarding_form, wrapper: :bs3, url: product_type_product_wizard_index_path(@product_type), html: { multipart: true, id: "boarding_form", :"data-dimensions-template" => DimensionsTemplate::UNITS_OF_MEASURE.to_json }, method: :post do |f|
  = f.simple_fields_for :user, @boarding_form.user do |user_form|
    = f.simple_fields_for :company, @boarding_form.company do |companies_form|
      = f.simple_fields_for f.object.product_form do |product_form|
        = product_form.simple_fields_for :extra_properties, product_form.object.extra_properties do |properties_form|
          = product_form.input :id, :as => :hidden if product_form.object.product.persisted?
          - @form_components.each do |form_component|
            - data_hash ||= nil
            - if form_component.form_fields.include?({ 'product' => 'shipping_info' })
              - data_hash = { 'js-element-identifier' => 'initial_shipping_profiles_section' }
            %section.list{ data: data_hash }
              .container-fluid
                %h2.section-heading= form_component.name

                - form_component.form_fields.each do |form_field|
                  - model = form_field.keys.first
                  - field = form_field[model]
                  - if model == 'user'
                    = render :partial => 'registrations/attributes', :locals => { f: user_form, only_inputs: [field.to_sym], country: @country }
                  - elsif model == 'company'
                    = render partial: 'company_form', locals: { f: companies_form, company: companies_form.object, only_inputs: [ field.to_sym ] }
                  - elsif model == 'product'
                    = render 'forms/product_form', f: product_form, properties_form: properties_form, only_inputs: [ field.to_sym ], form_fields: form_component.form_fields

  .submit-bar
    = f.submit t('onboarding_wizard.continue_and_preview_listing'), class: "btn medium blue"
    = f.submit t('onboarding_wizard.save_for_later'), class: "btn medium green", name: "boarding_form[draft]"
