= simple_form_for [:instance_admin, @controller_scope, @target, resource], :html => { :multipart => true} do |f|
  .row
    .input-container.col-xs-6
      = f.input :name, required: false, input_html: { class: 'form-control' }
    .input-container.col-xs-6
      = f.input :label, input_html: { class: 'form-control' }
  .row
    .input-container.col-xs-6
      = f.input :attribute_type, required: false, as: :select, collection: CustomAttributes::CustomAttribute::ATTRIBUTE_TYPES.map { |t| [t.humanize, t] }, prompt: "Choose...", input_html: { class: 'form-control' }
    .input-container.col-xs-6
      = f.input :html_tag, as: :select, collection: CustomAttributes::CustomAttribute::HTML_TAGS.map { |t| [t.humanize, t] }, include_blank: true, prompt: "Choose...", input_html: { class: 'form-control' }
  .row
    .input-container.col-xs-4
      = f.input :placeholder, input_html: { class: 'form-control' }
    .input-container.col-xs-4
      = f.input :prompt, input_html: { class: 'form-control' }
    .input-container.col-xs-4
      = f.input :default_value, input_html: { class: 'form-control' }
  .row
    .input-container.col-xs-6
      = f.input :hint, input_html: { class: 'form-control' }
    .input-container.col-xs-6
      = f.input :public, as: :boolean, inline_label: true
  .row
    .input-container.col-xs-6
      = f.input :searchable, as: :boolean, inline_label: true
      = f.input :search_in_query, as: :boolean, inline_label: true
    .input-container.col-xs-6
      = f.input :valid_values, label: t('instance_admin.manage.custom_attributes.valid_values_separate_with_comma'), wrapper_html_options: { class: 'for-select-tag' }, input_html: { value: f.object.valid_values.join(', '), style: "width: 100%;" }
  .row
    .input-container.col-xs-4
      = f.input :required, as: :boolean, inline_label: true
    .input-container.col-xs-4
      = f.input :min_length, input_html: { class: 'form-control' }
    .input-container.col-xs-4
      = f.input :max_length, input_html: { class: 'form-control' }
  .row
    .input-container.col-xs-12
      = f.input :validation_only_on_update, as: :boolean, inline_label: true

  .row
    .input-container.col-xs-6
      = f.input :input_html_options_string, label: t('instance_admin.manage.custom_attributes.input_html_options'), input_html: { value: f.object.input_html_options.map { |k, v| "#{k} => #{v}"}.join(', '), class: 'form-control' }
    .input-container.col-xs-6
      = f.input :wrapper_html_options_string, label: t('instance_admin.manage.custom_attributes.wrapper_html_options'), input_html: { value: f.object.wrapper_html_options.map { |k, v| "#{k} => #{v}"}.join(', '), class: 'form-control' }

  = content_for :header_buttons do
    = f.button :submit, t('instance_admin.save'), class: 'btn btn-blue pull-right', data: { 'submit-form' => 1, 'form-selector' => 'form' }
