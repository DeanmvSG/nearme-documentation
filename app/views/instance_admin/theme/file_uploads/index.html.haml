.content-container
  = simple_form_for [:instance_admin, :theme, Ckeditor::Asset.new ], as: :upload, url: instance_admin_theme_file_uploads_path, method: :post, html: { data: { 'attachment-form': true }, class: 'form-vertical row' } do |f|
    %fieldset.col-xs-12
      %h4 New asset
      .row
        .input-container.col-xs-12.col-md-4
          = f.input :title, input_html: { class: 'form-control' }

        .input-container.col-xs-12.col-md-4.col-md-offset-2
          = f.input :access_level, collection: Ckeditor::Asset::GLOBAL_ASSET_ACCESS_LEVELS, include_blank: true

      .row
        .input-container.col-xs-6
          =# TODO: Multiple? :( PLZ :( -- Send button is already talking about multiple assets :~(
          = f.input :data, label: 'Files', input_html: { data: { file: true } }

      .row
        = f.submit 'Send assets', class: 'btn btn-primary'

  %hr

  .mpo_file_uploads
    .file_upload_form.row
      .search_form.col-xs-12
        %h4 My assets
        = simple_form_for :search, url: search_instance_admin_theme_file_uploads_path, method: :get do |f|
          .row
            .input-container
              = f.input :query, label: false, as: :string, input_html: { value: @query, class: 'string form-control' }
            .input-container
              = f.submit t('instance_admin.file_upload.search'), class: 'btn btn-light'
          /
            .row
              .input-container.col-xs-12
                = file_upload_input('upload[file]', instance_admin_theme_file_uploads_path, nil, t('instance_admin.file_upload.upload_file'), {"no-multiple" => true, height: 0, row: 0, file_types: '(\.|\/)(' + [Ckeditor.attachment_file_types, Ckeditor.image_file_types].flatten.join('|') + ')$', upload_type: 'ckfile', files_container: '#fileupload', wrong_file_message: t('ckeditor_custom.file_uploads.wrong_file_message') })

    #fileupload.gal-holder
      .fileupload-list
        - @files.scoped.each do |asset|
          = render :partial => 'asset', locals: { asset: asset }

      .clear
      - unless @files.first_page?
        .pagination
          = link_to t('ckeditor_custom.file_uploads.prev'), params.merge(:page => @files.prev_page), :class => "prev", :rel => "prev"
      - unless @files.last_page?
        .pagination
          = link_to t('ckeditor_custom.file_uploads.next'), params.merge(:page => @files.next_page), :class => "next", :rel => "next"

