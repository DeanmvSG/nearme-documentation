= simple_form_for @instance, :url => lock_instance_admin_settings_configuration_path, method: :post, :html => { :multipart => true } do |f|
  %h4 Master lock
  .content-container
    .row.dropshadow
      .input-container.col-xs-12
        = f.input :mark_as_locked, as: :boolean, label: "Lock admin settings", input_html: { checked: f.object.locked? }
  .content-container
    .row
      = f.button :submit, 'Update Lock', class: 'btn btn-grey pull-right'

= simple_nested_form_for @instance, :url => instance_admin_settings_configuration_path, :html => { :multipart => true } do |f|
  %h4 Basic Configuration
  .content-container
    .row
      .input-container.col-xs-12
        = f.input :name, label: 'Marketplace Name', input_html: { class: 'form-control' }, required: false, placeholder: 'Your marketplace name'
    .row
      .input-container.col-xs-6
        = f.input :skip_company, label: "Don't require company"
      .input-container.col-xs-6
        = f.input :service_fee_guest_percent, label: 'Guest Service Fee Percent' do
          = f.input_field :service_fee_guest_percent, type: 'tel', class: 'form-control'
    .row.dropshadow
      .input-container.col-xs-6
        = f.input :force_accepting_tos, label: "Force accepting ToS on sign up"
      .input-container.col-xs-6
        = f.input :service_fee_host_percent, label: 'Host Service Fee Percent' do
          = f.input_field :service_fee_host_percent, type: 'tel', class: 'form-control'

  %h4 Marketplace Password
  .content-container
    .row.dropshadow
      .input-container.col-xs-6
        = f.input :marketplace_password, label: "Password", placeholder: 'Password', as: :string, input_html: { class: 'form-control' }
      .input-container.col-xs-6
        = f.input :password_protected, as: :boolean, label: "Require password to access marketplace"

  %h4 Payment Transfers
  .content-container
    .row.dropshadow
      .input-container.col-xs-6
        = f.input :payment_transfers_frequency, collection: PaymentTransfer::FREQUENCIES.collect { |f| [t(".#{f}"), f] }, input_html: { class: 'form-control' }, prompt: true

  %h4 Terminology
  .content-container
    .row
      .input-container.col-xs-12
        = f.input :bookable_noun, label: 'Bookable Noun (e.g. Desk)', input_html: { class: 'form-control' }
    .row.dropshadow
      .input-container.col-xs-6
        = f.input :lessor, label: 'Lessor (e.g. host)', input_html: { class: 'form-control' }
      .input-container.col-xs-6
        = f.input :lessee, label: 'Lessee (e.g. guest)', input_html: { class: 'form-control' }

  %h4 Text Filters
  .content-container.dropshadow
    .row
      .input-container.col-xs-12
        = f.input :apply_text_filters, label: "Apply text filters"
    #text-filters
      = f.fields_for :text_filters, wrapper: false do |f|
        .fields
          .row
            .input-container.col-xs-12
              = f.input :name, label: false, placeholder: 'Name', input_html: { class: 'form-control' }
              = f.input :regexp, label: false, placeholder: 'Regexp', input_html: { class: 'form-control' }
              = f.input :replacement_text, placeholder: 'Replacement Text', label: false, input_html: { class: 'form-control' }
              = f.link_to_remove confirm: (f.object.try(:name).present? ? "Are you sure you want to delete #{f.object.name}?" : false) do
                .fa.fa-trash-o.fa-2x.inline-form-icon.pull-right

  .row
    .col-xs-12
      = f.link_to_add :text_filters, :data => { :target => "#text-filters" } do
        .btn.btn-grey.pull-right
          + Add Text Filter

  %h4 Support
  .content-container
    .row.dropshadow
      .input-container.col-xs-12
        = f.input :support_email, label: "Support email", placeholder: 'example@gmail.com', input_html: { class: 'form-control' }
      .input-container.col-xs-12
        = f.input :support_imap_hash, label: "IMAP YAML for Support email", as: :text, input_html: { class: 'field-textarea', rows: "15" }

  = f.button :submit, 'Save', class: 'btn btn-green pull-right'
