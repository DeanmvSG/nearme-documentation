= simple_form_for @instance, :url => lock_instance_admin_settings_configuration_path, method: :post, :html => { :multipart => true, :class => "form-horizontal" } do |f|
  .row-fluid
    .controls.controls-row
      .span6
        = f.input :mark_as_locked, as: :boolean, :label => "Master Lock", input_html: { class: 'input-block-level', checked: f.object.locked? }
      = f.button :submit, 'Update Lock', class: 'btn btn-primary'

= simple_nested_form_for @instance, :url => instance_admin_settings_configuration_path, :html => { :multipart => true } do |f|
  %fieldset
    %legend Basic Configuration
    .row-fluid
      .controls.controls-row
        = f.input :name, label: 'Marketplace Name', required: false, wrapper_html: { class: 'span6' }, input_html: { class: 'input-block-level' }
        = f.input :service_fee_guest_percent, label: 'Guest Service Fee', wrapper_html: {class: 'input-prepend span6'} do
          %span.add-on %
          = f.input_field :service_fee_guest_percent, type: 'tel', class: 'input-block-level'
    .row-fluid
      .controls.controls-row
        .span6
          = f.input :skip_company, :label => false, :inline_label => "Don't require company", input_html: { class: 'input-block-level' }
          = f.input :force_accepting_tos, :label => false, :inline_label => "Force accepting ToS on sign up", input_html: { class: 'input-block-level' }
        = f.input :service_fee_host_percent, label: 'Host Service Fee', wrapper_html: {class: 'input-prepend span6'} do
          %span.add-on %
          = f.input_field :service_fee_host_percent, type: 'tel', class: 'input-block-level'

  %hr

  %fieldset
    %legend Marketplace Password
    .row-fluid
      .controls.controls-row
        = f.input :marketplace_password, placeholder: 'Password', as: :string, label: false, wrapper_html: { class: 'span6' }, input_html: { class: 'input-block-level' }
    .row-fluid
      .controls.controls-row
        = f.input :password_protected, required: false, as: :boolean, label: false, inline_label: "Require password to access marketplace (e.g. testing or private marketplaces)", wrapper_html: { class: 'span6' }, input_html: { class: 'input-block-level' }

  %hr

  %fieldset
    %legend Terminology
    .row-fluid
      .controls.controls-row
        = f.input :lessor, label: 'Lessor (e.g. host)', wrapper_html: { class: 'span6' }, input_html: { class: 'input-block-level' }
        = f.input :lessee, label: 'Lessee (e.g. guest)', wrapper_html: { class: 'span6' }, input_html: { class: 'input-block-level' }
    .row-fluid
      .controls.controls-row
        = f.input :bookable_noun, label: 'Bookable Noun (e.g. Desk)', wrapper_html: { class: 'span6' }, input_html: { class: 'input-block-level' }

  %hr

  %fieldset
    %legend Domain Names
    #domains
      = f.fields_for :domains, wrapper: false do |f|
        .row-fluid
          .controls.controls-row
            .fields
              = f.input :name, label: false, wrapper_html: { class: 'span6' }, input_html: { class: 'input-block-level' }
              - unless f.object.near_me_domain?
                = f.link_to_remove confirm: (f.object.name.present? ? "Are you sure you want to delete #{f.object.name}?" : false) do
                  .fa.fa-trash-o.fa-2x.inline-form-icon

    %br
    .row-fluid
      .controls.controls-row
        = f.link_to_add :domains, :data => { :target => "#domains" } do
          %button.btn.btn-form-field.span6
            + Add Domain Name

  %hr

  %fieldset
    %legend Text Filters
    = f.input :apply_text_filters, :label => false, :inline_label => "Apply text filters", input_html: { class: 'input-block-level' }
    #text-filters
      = f.fields_for :text_filters, wrapper: false do |f|
        .row-fluid
          .controls.controls-row
            .fields
              = f.input :name, label: false, placeholder: 'Name', wrapper_html: { class: 'span3' }, input_html: { class: 'input-block-level' }
              = f.input :regexp, label: false, placeholder: 'Regexp', wrapper_html: { class: 'span3' }, input_html: { class: 'input-block-level' }
              = f.input :replacement_text, placeholder: 'Replecament Text', label: false, wrapper_html: { class: 'span3' }, input_html: { class: 'input-block-level' }
              = f.link_to_remove confirm: (f.object.try(:name).present? ? "Are you sure you want to delete #{f.object.name}?" : false) do
                .fa.fa-trash-o.fa-2x.inline-form-icon

    %br
    .row-fluid
      .controls.controls-row
        = f.link_to_add :text_filters, :data => { :target => "#text-filters" } do
          %button.btn.btn-form-field.span6
            + Add Text Filter

  %hr


  %fieldset
    %legend Support
    .row-fluid
      .controls.controls-row
        = f.input :support_email, label: "Support email", input_html: { class: 'input-block-level' }
        = f.input :support_imap_hash, label: "IMAP YAML for Support email", as: :text, input_html: { class: 'input-block-level' }

  = f.button :submit, 'Save', class: 'btn btn-primary pull-right'
