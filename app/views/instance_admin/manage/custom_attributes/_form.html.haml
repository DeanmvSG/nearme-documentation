= simple_form_for [:instance_admin, :manage, @target, resource], :html => { :multipart => true} do |f|
  .content-container
    .row
      .input-container.col-xs-6
        = f.input :name, required: false, input_html: { class: 'form-control' }, disabled: f.object.required_internally?
      .input-container.col-xs-6
        = f.input :label, input_html: { class: 'form-control' }
    .row
      .input-container.col-xs-6
        = f.input :attribute_type, required: false, :as => :select, disabled: f.object.required_internally?, :collection => CustomAttributes::CustomAttribute::ATTRIBUTE_TYPES.map { |t| [t.humanize, t] }, :prompt => "Choose...", input_html: { class: 'form-control' }
      .input-container.col-xs-6
        = f.input :html_tag, as: :select, collection: CustomAttributes::CustomAttribute::HTML_TAGS.map { |t| [t.humanize, t] }, include_blank: true, prompt: "Choose...", input_html: { class: 'form-control' }
    .row
      .input-container.col-xs-6
        = f.input :placeholder, input_html: { class: 'form-control' }
      .input-container.col-xs-6
        = f.input :prompt, input_html: { class: 'form-control' }
    .row
      .input-container.col-xs-6
        = f.input :default_value, input_html: { class: 'form-control' }
      .input-container.col-xs-6
        = f.input :public, as: :boolean
    .row
      .input-container.col-xs-6
        = f.input :hint, input_html: { class: 'form-control' }
      .input-container.col-xs-6
        = f.input :valid_values, label: 'Valid values (separate with coma)', wrapper_html_options: { class: 'for-select-tag' }, input_html: { value: f.object.valid_values.join(', ') }
    .row.dropshadow
      .input-container.col-xs-6
        = f.input :input_html_options_string, label: 'Input Html Options(key1 => value1, key2 => value2)', input_html: { value: f.object.input_html_options.map { |k, v| "#{k} => #{v}"}.join(', ') }, input_html: { class: 'form-control' }
      .input-container.col-xs-6
        = f.input :wrapper_html_options_string, label: 'Wrapper Html Options(key1 => value1, key2 => value2)', input_html: { value: f.object.wrapper_html_options.map { |k, v| "#{k} => #{v}"}.join(', ') }, input_html: { class: 'form-control' }

  %br
  = f.button :submit, 'Save', class: 'btn btn-green pull-right'
