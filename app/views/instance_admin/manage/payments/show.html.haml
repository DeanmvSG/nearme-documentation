.content-container
  %h4 Payment details
  .row
    %ul
      %li
        Total:
        = humanized_money_with_cents_and_symbol @payment.total_amount
      %li
        Subtotal:
        = humanized_money_with_cents_and_symbol @payment.subtotal_amount
      %li
        Service Fee:
        = humanized_money_with_cents_and_symbol @payment.service_fee_amount_guest
      %li
        Service Usell & Addons:
        = humanized_money_with_cents_and_symbol @payment.service_additional_charges
      %li
        Host Usell & Addons:
        = humanized_money_with_cents_and_symbol @payment.host_additional_charges
      %li
        State:
        = @payment.state

  %h4 Charge attempts:

  - @payment.charges.each do |charge|
    .content-container

      .row
        .text-container{class: charge.success? ? 'text-success' : 'text-danger' }
          %p
            Success:
            = charge.success
          %p
            Created at:
            = l charge.created_at, format: :long
          - if charge.payment_gateway.present?
            %p
              Payment Gateway:
              = link_to charge.payment_gateway.try(:name), edit_instance_admin_settings_payment_gateway_path(charge.payment_gateway)
          %p
            Amount:
            = humanized_money_with_cents_and_symbol charge.price

          %p
            Response:
            = charge.response.to_yaml

- if @payment.refunds.any?
  .content-container

    %h4 Payment refund

    - @payment.refunds.each do |refund|
      .content-container

        .row
          .text-container{class: refund.success? ? 'text-success' : 'text-danger' }
            %p
              Success:
              = refund.success
            %p
              Created at:
              = l refund.created_at, format: :long
            - if refund.payment_gateway.present?
              %p
                Payment Gateway:
                = link_to refund.payment_gateway.try(:name), edit_instance_admin_settings_payment_gateway_path(refund.payment_gateway)
            %p
              Amount:
              = number_to_currency_symbol(refund.currency, Money.new(refund.amount))
            %p
              Receiver:
              = refund.receiver.try(:capitalize)
            %p
              Response:
              = refund.response

- if @payment.voided?
  .content-container
    %h4 Payment void
    - if @payment.successful_billing_authorization
      .content-container
        .row
          .text-container{class: @payment.successful_billing_authorization.success? ? 'text-success' : 'text-danger' }
            %p
              Voided at:
              = @payment.successful_billing_authorization.void_at
            %p
              Void Response:
              = @payment.successful_billing_authorization.void_response
