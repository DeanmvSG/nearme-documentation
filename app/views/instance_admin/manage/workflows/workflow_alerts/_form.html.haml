= simple_form_for [:instance_admin, :manage, @workflow_step, resource], html: { id: 'workflow_form'} do |f|
  .content-container
    %h4 Main settings
    .row
      .input-container.col-xs-12
        = f.input :name, required: true, input_html: { class: 'form-control' }
    .row
      .input-container.col-xs-6
        = f.input :alert_type, collection: WorkflowAlert::ALERT_TYPES, include_blank: false, input_html: { class: 'form-control', :'data-alert-type' => true }
      .input-container.col-xs-6
        = f.input :delay, label: 'Delay (minutes)', input_html: { class: 'form-control' }
    .row
      .input-container.col-xs-12
        = f.input :prevent_trigger_condition, placeholder: t('instance_admin.workflows.alerts.prevent_trigger_condition'), input_html: { class: 'form-control' }
    %div{:'data-optional-settings-api_call' => true, :'data-optional-settings' => true}
      %h4 Api Call Settings
      .row
        .input-container.col-xs-2
          = f.input :use_ssl, input_html: { class: 'checkbox' }
        .input-container.col-xs-2
          = f.input :request_type, collection: WorkflowAlert::REQUEST_TYPE, include_blank: false, input_html: { class: 'form-control' }
        .input-container.col-xs-8
          = f.input :endpoint, input_html: { class: 'form-control' }, as: :string
      .row
        .input-container.col-xs-6
          = f.input :payload_data, input_html: { class: 'form-control' }
        .input-container.col-xs-6
          = f.input :headers, input_html: { class: 'form-control' }

    %div{:'data-optional-settings-email' => true, :'data-optional-settings' => true}
      %h4 Email Settings
      .row
        .input-container.col-xs-6
          = f.input :recipient, input_html: { class: 'form-control' }
        .input-container.col-xs-6
          = f.input :recipient_type, collection: f.object.recipient_types, include_blank: true, input_html: { class: 'form-control' }
      .row
        .input-container.col-xs-6
          = f.input :template_path, collection: @custom_emails, required: true, input_html: { class: 'form-control' }, hint: "You can add custom emails in Manage -> Emails"
        .input-container.col-xs-6
          = f.input :layout_path, collection: @custom_email_layouts, required: true, input_html: { class: 'form-control' }, hint: "You can add custom layout in Manage -> Email Layouts"
      .row
        .input-container.col-xs-4
          = f.input :cc, required: true, input_html: { class: 'form-control' }, placeholder: 'email1@example.com, email2@example.com...'
        .input-container.col-xs-4
          = f.input :bcc, required: true, input_html: { class: 'form-control' }, placeholder: 'email1@example.com, email2@example.com...'
        .input-container.col-xs-4
          = f.input :bcc_type, collection: f.object.bcc_types, include_blank: t('general.none'), input_html: { class: 'form-control' }
      .row
        .input-container.col-xs-6
          = f.input :reply_to, input_html: { class: 'form-control' }, placeholder: 'email1@example.com, email2@example.com...'
        .input-container.col-xs-6
          = f.input :reply_to_type, collection: f.object.recipient_types, include_blank: true, input_html: { class: 'form-control' }
      .row
        .input-container.col-xs-12
          = f.input :from, required: true, input_html: { class: 'form-control' }, placeholder: 'email1@example.com'
      .row
        .input-container.col-xs-12
          = f.input :subject, placeholder: 'Hello {{user.first_name}}, provide subject', required: true, input_html: { class: 'form-control' }, hint: "Provide liquid string"
      - if defined? @workflow_step.associated_class.constantize::CUSTOM_OPTIONS
        = f.simple_fields_for :custom_options, OpenStruct.new(f.object.custom_options) do |custom_option_form|
          - @workflow_step.associated_class.constantize::CUSTOM_OPTIONS.each do |custom_option|
            .row
              .input-container.col-xs-12
                = custom_option_form.input custom_option

    %div{:'data-optional-settings-sms' => true, :'data-optional-settings' => true}
      %h4 Sms Settings
      .row
        .input-container.col-xs-6
          = f.input :recipient, input_html: { class: 'form-control' }
        .input-container.col-xs-6
          = f.input :recipient_type, collection: f.object.recipient_types, include_blank: true, input_html: { class: 'form-control' }
      .row
        .input-container.col-xs-6
          = f.input :template_path, collection: @custom_smses, required: true, input_html: { class: 'form-control' }, hint: "You can add custom sms template in Manage -> Smses"

  %br
  = f.button :submit, 'Save', class: 'btn btn-blue pull-right'
