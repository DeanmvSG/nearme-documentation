= form_tag '', :method => 'get', enforce_utf8: :false do
  .row
    .text-container
      .filters
        .filter.value

        = filter_query_text label: t('instance_admin.manage.admin_searchable.webhooks.query'), 'placeholder': t('instance_admin.manage.admin_searchable.webhooks.event_id'), param_name: 'query'

        = filter_dropdown param_name: :payment_gateway_id, label: t('instance_admin.manage.admin_searchable.webhooks.payment_gateway'), allow_blank: true, blank_label: t('instance_admin.manage.admin_searchable.webhooks.all_payment_gateways'), all_values: @payment_gateways.each_with_object({}) { |val, obj| obj[val.id.to_s] = val.name }, width: 270

        = filter_dropdown param_name: 'state', label: t('instance_admin.manage.admin_searchable.webhooks.state'), allow_blank: true, blank_label: t('instance_admin.manage.admin_searchable.webhooks.in_all_states'), all_values: Webhook.state_machine.states.each_with_object({}) { |val, object| object[val.name.to_s] = val.name.capitalize.to_s }

        = filter_dropdown param_name: 'mode', label: t('instance_admin.manage.admin_searchable.webhooks.mode'), allow_blank: false, all_values: { 'live' => "Live", 'test' => "Test" }
        = filter_dropdown param_name: :per_page, label: t('instance_admin.manage.admin_searchable.per_page'), allow_blank: false, all_values: {'25' => '25', '50' => '50', '100' => '100' }

  .table-container.col-xs-12
    %table.table.table-striped.sortable
      %thead
        %tr
          %th= t('instance_admin.manage.webhooks.id')
          %th= t('instance_admin.manage.webhooks.payment_gateway')
          %th= t('instance_admin.manage.webhooks.state')
          %th= t('instance_admin.manage.webhooks.mode')
          %th= t('instance_admin.manage.webhooks.created_at')
          %th= t('instance_admin.manage.webhooks.retry_count')
          %th= t('instance_admin.manage.webhooks.details')

      - @webhooks.each do |webhook|
        %tr
          %td= webhook.id
          %td= webhook.payment_gateway.try(:name)
          %td= webhook.state.try(:capitalize)
          %td= webhook.payment_gateway_mode
          %td= l(webhook.created_at, format: :long)
          %td= webhook.retry_count
          %td
            = link_to 'Details', "javascript:void(0);", data: {modal: true, href: instance_admin_manage_webhook_path(webhook) }
            - if webhook.failed?
              %span= ' | '
              = link_to 'Retry', retry_instance_admin_manage_webhook_path(webhook), method: :post
            - if webhook.archived?
              %span= ' | '
              = link_to 'Delete', instance_admin_manage_webhook_path(webhook), method: :delete, data: { confirm: "Are you sure?" }

- content_for :script do
  = render 'shared/modal'

