.row
  = form_tag '', :method => 'get', enforce_utf8: :false do
    .row
      .col-xs-3
        = #select_tag :order_gateway_id, options_from_collection_for_select(@order_gateways, "id", "name", params[:order_gateway_id]), include_blank: "All Payment Gateways", class: "selectpicker"

      .col-xs-2
        = #select_tag :transferred, options_for_select([ ["Awaiting for transfer", :awaiting], ["With transfer attempt", 'transferred'], ["All", :all] ], params[:transferred]), class: "selectpicker"
      .col-xs-2
        = #select_tag :state, options_for_select(Payment.state_machine.states.map{|s| [s.name.capitalize, s.name] } , params[:state]), include_blank: "In all states", class: "selectpicker"
      .col-xs-1
        = #select_tag :mode, options_for_select([["Live", 'live'], ["Test", 'test']], params[:mode]), class: "selectpicker"
      .col-xs-2
        =# submit_tag "Search", :name => nil, class: 'btn btn-light'
  .table-container.col-xs-12
    %table.table
      %thead
        %tr
          %th= t('instance_admin.manage.orders.number')
          %th= t('instance_admin.manage.orders.user')
          %th= t('instance_admin.manage.orders.payment')
          %th= t('instance_admin.manage.orders.state')
          %th= t('instance_admin.manage.orders.created_at')
          %th
            %b= t('instance_admin.manage.orders.order_amount')
          %th= t('instance_admin.manage.orders.details')

      - @orders.each do |order|
        %tr
          %td= order.number
          %td= order.user
          %td
            - if order.payment
              = link_to 'payment', instance_admin_manage_payment_path(order.payment)
            - else
              none
          %td= order.state
          %td= l(order.created_at, format: :long)
          %td
            %b= humanized_money_with_cents_and_symbol(order.total_amount)
          %td= link_to 'Details',  instance_admin_manage_order_path(order)
