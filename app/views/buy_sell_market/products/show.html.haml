- render_content_outside_container!
- hidden = [:user_reviews, :shipping, :refunds] # TODO: Remove when implemented

- title @product.name
- meta_description @product.try(:description).to_s.truncate(130, separator: ' ')
= product_structured_data

%section.product-head
  .container-fluid
    .row-fluid
      .span8
        = render partial: 'photos', locals: { product: @product }
      .span4
        = render 'name_and_price', product: @product
        - if @product.has_reviews?
          .rating.product-rating
            %p= t 'buy_sell_market.products.labels.rating'
            = render partial: 'stars', locals: { stars: @product.try(:average_rating).try(:round), count: @product.reviews_count }
        - else
          %br
        = render 'above_cart_management', product: @product
        - if @product.total_on_hand > 0
          = form_tag cart_add_product_path, method: :get, class: 'inline' do
            = hidden_field_tag 'product_id', @product.id
            = label_tag 'quantity', t('buy_sell_market.products.labels.qty')
            = select_tag 'quantity', options_for_select((1..@product.total_on_hand)), class: ''
            %button.cta.btn.blue.padding11.add_to_cart
              = t 'buy_sell_market.products.buttons.add_to_cart'
          - if @product.action_rfq?
            - rfq_label = (@product.action_free? ?  t('reservations.rfq') : t('reservations.offer'))
            = link_to rfq_label, '#', data: { modal: true, href: new_product_ticket_path(@product) }, class: 'btn gray', style: 'margin-top: 20px'

            - if @product.company.company_users.pluck(:user_id).compact.include?(current_user.try(:id))
              .edit-product-inline
                %h2= t('buy_sell_market.products.edit_inline')
                = simple_form_for ProductForm.new(@product), url: dashboard_company_product_type_product_path(@product.product_type, @product), html: {class: 'form-horizontal', id: "product_form", method: :put } do |f|

                  = hidden_field_tag :return_to, product_path(@product)
                  .all-inline
                    = f.input :price, as: :numeric
                    .currency
                      = currency_symbol_from_code(Spree::Config[:currency])
                    = f.submit "Save", class: "btn medium blue"

        - else
          .btn.disabled= t('buy_sell_market.products.buttons.out_of_stock')

        = render 'above_wish_lists', product: @product

        .product-social-wrapper
          - if platform_context.instance.wish_lists_enabled?
            = render 'shared/components/wish_list_button', object: @product, link_to_class: 'btn gray'

          = render 'above_social_buttons', product: @product

          = render partial: 'social_buttons', locals: { product: @product }

        = render 'below_cart_module', product: @product

%section.product-details
  .container-fluid
    .tab-content-container
      %ul.nav.nav-tabs.page-tabs{role: 'tablist'}
        %li{ class: "#{ 'active' if !param_reviews_page_present? }" }
          %a{'data-toggle' => 'tab', href: '#product-details', role: 'tab'}
            = t 'buy_sell_market.products.labels.item_details'
        - if @platform_context.instance.seller_attachments_enabled? && (attachments = @product.attachments_for_user(current_user)) && attachments.present?
          %li
            %a{'data-toggle' => 'tab', href: '#product-attachments', role: 'tab'}
              = t 'buy_sell_market.products.labels.documents'
        - if @product.has_reviews?
          %li{ class: "#{ 'active' if param_reviews_page_present? }" }
            %a{'data-toggle' => 'tab', href: '#product-reviews', role: 'tab'}
              #{t('buy_sell_market.products.labels.reviews')}
              = "(#{@product.reviews_count})"
        - unless hidden.include?(:shipping)
          %li
            %a{'data-toggle' => 'tab', href: '#product-shipping', role: 'tab'}
              = t 'buy_sell_market.products.labels.shippigng_policies'
        - if @product.extra_properties.entries.present?
          %li
            %a{'data-toggle' => 'tab', href: '#product-properties', role: 'tab'}
              = t 'buy_sell_market.products.labels.properties'

        = render 'extra_tab_titles', product: @product

      .tab-content
        - if @product.description.present?
          %article#product-details.tab-pane{ class: "#{ 'active' if !param_reviews_page_present? }" }
            = render 'product_description', product: @product

        - if @platform_context.instance.seller_attachments_enabled? && (attachments = @product.attachments_for_user(current_user)) && attachments.present?
          %article#product-attachments.tab-pane{ class: "#{ 'active' if param_reviews_page_present? }" }
            = render 'seller_attachments', product: @product, attachments: attachments

        - if @product.has_reviews?
          %article#product-reviews.tab-pane{ class: "#{ 'active' if param_reviews_page_present? }" }
            .rating-averages
              .row-fluid.reviews-summary
                .span8
                  %p= t 'buy_sell_market.products.labels.summary'
                .span3
                  .rating
                    = render partial: 'stars', locals: { stars: @product.try(:average_rating).try(:round) }
              - if @rating_questions.present?
                .row-fluid
                  - @rating_questions.each do |rating_question|
                    .row-fluid
                      .span8
                        %p= rating_question.text
                      .span3
                        .rating
                          = render partial: 'stars', locals: { stars:  (@product.question_average_rating[rating_question.id] || 0).round }
            = render partial: 'reviews/review', collection: @reviews
            = will_paginate_styled @reviews, param_name: 'reviews_page'

        - unless hidden.include?(:shipping)
          %article#product-shipping.tab-pane
            .row-fluid
              .span3
                %h5= t 'buy_sell_market.products.labels.shipping'
              .span9
                %p Ready to Ship in 3-5 business days
            .row-fluid
              .span3
                %h5= t 'buy_sell_market.products.labels.shipping_costs'
              .span9
                %table
                  %tr
                    %td USA
                    %td.country-price $5.00
                  %tr
                    %td Canada
                    %td.country-price $10.00
                  %tr
                    %td Everywhere else
                    %td.country-price $12.00
            .row-fluid
              .span3
                %h5= t 'buy_sell_market.products.labels.shipping_details'
              .span9
                %p
                  Shipping occurs twice a weeks via USPS 2-3 day priority mail.
                  The reason for twice a week shipping is, due to the plants watering schedule.
                  Once the plant is ordered, we want to make sure that the roots are bare when shipped and
                  dry dirt falls off much easier than wet dirt. Please open your package and unwrap as soon as they arrive.
                  Succulent plants can lose their color and as with all living plants, they really prefer to get out of
                  their boxes and into a good soil mixture. Any of the listings that state plants are shipped bare root
                  means that they are out of the pot and have very little soil. While they can travel that way its best
                  to get them replanted as soonz as they get to their new home.

            - unless hidden.include?(:shipping)
              .row-fluid
                .span3
                  %h5= t 'buy_sell_market.products.labels.refunds_and_exchanges'
                .span9
                  %p
                    All plants are of the highest quality. If you are dissatisfied in any way with your plants,
                    please contact Succulentbabies within 24 hours of delivery. All plants are carefully wrapped prior
                    to shipping to make sure they arrive in great shape. We have no control over your shipment once it
                    has been shipped and are not responsible for lost or damaged items. When shipped in pots, which on
                    occasion we will do, soil can get loose from the pot. Brush off the plant or gently blow to remove
                    the loose soil from the plant and replace the soil around the plants root.

        - if @product.extra_properties.entries.present?
          %article#product-properties.tab-pane
            = render partial: 'extra_properties', locals: { product: @product }

        = render 'extra_tab_panes', product: @product

    .product-profile-badge
      .vendor-profile
        = render 'administrator_badge', product: @product

