/ white box
.box-a
  = simple_form_for @user_update_profile_form, :as => :user, url: registration_path(resource_name), html: { class: 'form-a' } do |f|
    .fields
      = f.input :name
      = f.simple_fields_for :default_profile do |default_profile_form|
        = default_profile_form.simple_fields_for :properties do |properties_form|
          - (default_profile_form.object.model.instance_profile_type.try(:custom_attributes) || []).each do |attribute|
            = draw_attribute_for_form(attribute, properties_form)
      %p
        = t :more_info, scope: [:onboarding]

      %fieldset.media-group.sep
        %legend Cover Photo

        .single-photo
          = new_file_upload_input("cover_image",
            cover_image_path,
            resource.cover_image.thumbnail_dimensions[:thumbnail],
            "Upload Photo",
            "no-multiple" => true,
            :error => f.object.errors.include?(:cover_image).present? ? "Please upload cover image." : nil) do
            - if f.object.cover_image.present?

              .photo-item{:id => "cover-photo-thumbnail"}
                = image_tag f.object.cover_image.url
                .media-actions
                  %button.button-a.small.action--edit{:type => "button", :data => { :"resize-photo" => true, :modal => true, :href => edit_cover_image_path }, :title => t('forms.photos.collection.rotate_and_crop')}
                    %span.intelicon-edit

                  %button.button-a.small.red.action--remove{:type => "button", :data => { :"delete-photo" => true, :url => destroy_cover_image_path }, :title => t('forms.photos.collection.delete') }
                    %span.intelicon-trash-outlined

        - if is_i18n_set?('simple_form.hints.profile.cover_image')
          %p.photo-uploader-hint
            = t('simple_form.hints.profile.cover_image')


      %fieldset.media-group.sep
        %legend Avatar

        .single-photo
          = new_file_upload_input("avatar",
            avatar_path,
            resource.avatar.thumbnail_dimensions[:medium],
            "Upload Photo",
            "no-multiple" => true,
            :error => f.object.errors.include?(:avatar).present? ? "Please upload avatar." : nil) do
            - if f.object.avatar.present?

              .photo-item{:id => "cover-photo-thumbnail"}
                = image_tag f.object.avatar.url(:medium)
                .media-actions
                  %button.button-a.small.action--edit{:type => "button", :data => { :"resize-photo" => true, :modal => true, :href => edit_avatar_path }, :title => t('forms.photos.collection.rotate_and_crop')}
                    %span.intelicon-edit

                  %button.button-a.small.red.action--remove{:type => "button", :data => { :"delete-photo" => true, :url => destroy_avatar_path }, :title => t('forms.photos.collection.delete') }
                    %span.intelicon-trash-outlined

        - if is_i18n_set?('simple_form.hints.profile.avatar')
          %p.photo-uploader-hint
            = t('simple_form.hints.profile.avatar')


    = f.simple_fields_for :current_address do |address_form|
      .fields.location
        = render :partial => 'addresses/form', locals: { f: address_form, label: "Location"}

    %p.action
      = f.button :submit
